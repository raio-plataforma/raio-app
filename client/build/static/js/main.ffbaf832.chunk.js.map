{"version":3,"sources":["assets/raio_bemvindo.png","assets/selo.png","utils/theme.js","history.js","comps/Header/CloseButton.jsx","comps/Modal/index.jsx","comps/Button/index.jsx","components/popups/Signup.jsx","comps/Header/style.js","utils/setAuthToken.js","utils/service.js","comps/Header/index.jsx","comps/AppBody/index.jsx","comps/Select/index.jsx","components/If.jsx","components/Text.jsx","components/Status.jsx","pages/Signup/dicioFields.js","pages/Signup/styles.js","pages/Signup/User.jsx","comps/Text/index.jsx","comps/Title/index.jsx","pages/Login/style.js","pages/Login/Login.jsx","components/loading/index.js","pages/Dashboard/user_info.js","pages/Dashboard/Profile.jsx","pages/Dashboard/Info.jsx","components/Modal.jsx","comps/FormButton/index.jsx","pages/Dashboard/index.js","pages/Dashboard/Admin/Admin.jsx","components/Flexbox.jsx","utils/formatter.js","comps/Checkbox/index.jsx","components/Label.jsx","components/Select.jsx","comps/ChipOptions/style.js","comps/ChipOptions/index.jsx","comps/Switch/index.jsx","pages/Signup/Enterprise.jsx","components/PrivateRoute.js","pages/Vacancy/style.js","comps/Tables/index.jsx","pages/Vacancy/VacancyList.jsx","comps/FormText/index.jsx","comps/CardVacancy/index.jsx","pages/Vacancy/AllVacancies.jsx","pages/Enterprises/style.js","pages/Enterprises/index.jsx","pages/Professionals/style.js","pages/Professionals/index.jsx","pages/Edit/style.js","pages/Edit/User.jsx","pages/Edit/Professional.jsx","pages/Edit/Enterprise.jsx","pages/Signup/Professional.jsx","comps/FormSelect/index.jsx","pages/Vacancy/VacancyRegister.jsx","components/Button.jsx","components/Textarea.jsx","components/Checkboxes.jsx","components/Radios.jsx","pages/Search/styles.js","pages/Search/components/CardEnterprise.js","pages/Search/ResultSearchEnterprise.js","pages/Search/SearchEnterprise.js","pages/Search/ResultSearchProfessionals.js","pages/Search/SearchProfessionals.js","comps/CardMyVacancy/index.jsx","pages/JobProfessional/MyJobs.jsx","pages/Login/Forgot.jsx","pages/Login/Reset.jsx","App.js","models/index.js","models/auth.js","models/register.js","models/user.js","models/vacancy.js","models/enterprise.js","models/professional.js","models/ui.js","store.js","serviceWorker.js","index.js","assets/loading.svg"],"names":["module","exports","theme","createMuiTheme","palette","text","primary","secondary","disabled","hint","main","light","contrastText","dark","common","white","contrastThreshold","tonalOffset","ptBR","createBrowserHistory","CloseButton","onClick","color","isOpened","compColor","IconButton","aria-label","fontSize","DialogTitle","props","children","onClose","classes","other","style","display","justifyContent","disableTypography","Typography","component","variant","Modal","isOpen","title","Dialog","maxWidth","fullWidth","aria-labelledby","PaperProps","backgroundColor","boxShadow","open","id","dividers","Button","type","styles","isLoading","size","PropTypes","node","bool","string","defaultProps","undefined","Wrapper","styled","div","SignupPopup","toggleModalStatus","handleClick","userType","localStorage","setItem","to","nav","StyledLogo","img","StyledNavLink","NavLink","StyledAside","button","aside","setAuthToken","token","axios","defaults","headers","px","value","defaultValue","newValue","css","isEmpty","Object","keys","length","trim","formatCheckboxFields","field","identifiers","filter","i","getUserType","Header","useState","modalStatus","setModalStatus","setAuth","useStoreActions","actions","auth","logoutUser","toggleMenu","ui","useStoreState","state","menuOpened","useEffect","jwtToken","decoded","jwtDecode","isAuthenticated","user","currentTime","Date","now","exp","className","role","Container","Grid","container","justify","href","src","width","height","alt","Signup","StyledBody","AppBody","Select","label","register","name","options","onChange","error","opt","setOpt","handleChange","FormControl","InputLabel","htmlFor","native","inputRef","e","target","inputProps","map","option","index","key","FormHelperText","If","condition","IfElse","True","False","StyledText","p","weight","margin","Text","Error","msg","Success","segment","functions","gender","identitySegments","hiringType","formations","cnpj_type","separated_functions","list","Form","form","Background","WrapButton","Users","h1","useForm","handleSubmit","errors","getValues","reset","registerUser","registerError","labelName","user_type","onSubmit","data","formatted","confirm_password","confirmPassword","self_declaration","selfDeclaration","setTimeout","textAlign","spacing","item","xs","TextField","email","message","helperText","required","pattern","password","validate","isMatch","minLength","phone","maxLength","Snackbar","autoHideDuration","Alert","elevation","severity","align","compSize","Title","getSize","Login","modalMsg","setModalMsg","authUser","loginError","history","push","center","alignItems","FilledInput","endAdornment","InputAdornment","position","Loading","loading","getState","stateID","searchFor","format","states","formatPhone","num","replace","getInfo","values","campo","valor","birthday","address","city","user_email","links","education","formation_institution","expertise_areas","join","foundation_date","other_states","business_fields","identity_segments","diversity_functions","StyledProfile","Profile","icon","associate","bio","segments","pcd","toLowerCase","StyledInfo","Info","infoList","info","val","ModalStyled","ModalContentStyled","CloseButtonStyled","opened","useStyles","makeStyles","FormButton","compVariant","Dashboard","getUser","hasVacancies","vacancies","usedVacancies","modalInfoPlans","setModalInfoPlans","modalBoasVindas","setModalBoasVindas","Paper","padding","_id","enterprise_name","apan_associate","presentation","business_segments","enterprise_id","user_id","welcome","seloPlans","DashboardWrapper","handleLink","List","subheader","ListSubheader","ListItem","ListItemIcon","ListItemText","Flexbox","horizontal","vertical","end","top","bottom","left","right","shape","oneOfType","number","displayName","parseDate","date","day","substring","month","year","dateToString","getKeys","obj","normalizeArrayData","split","root","flexDirection","fieldset","fontWeight","CheckboxesGroup","listValues","valueList","parseInt","React","setState","FormLabel","FormGroup","sort","FormControlLabel","control","Checkbox","checked","includes","newState","StyledLabel","Label","firstValue","ref","StyledChips","ChipOptions","onAddTerm","txtValue","addValue","handleAddTerm","term","newList","onBlur","labelWidth","Chip","onDelete","SwitchLabels","hasValue","row","event","Enterprise","setValue","registerCompany","setLoader","handleRadio","selectedOption","cnpjType","apanAssociate","identity_content","identityContent","InputLabelProps","shrink","multiline","rows","uf","uuid","enterprise","PrivateRoute","Component","rest","render","Group","descendingComparator","a","b","orderBy","EnhancedTableHead","order","headCells","onRequestSort","TableHead","TableRow","headCell","property","cols","indexOf","colName","TableCell","sortDirection","TableSortLabel","active","direction","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","flex","EnhancedTableToolbar","Toolbar","paper","marginBottom","table","minWidth","EnhancedTable","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","TableContainer","Table","rowCount","TableBody","array","comparator","stabilizedThis","el","stableSort","getComparator","slice","hc","nameCell","cell","hover","tabIndex","c","s","action","Tooltip","tooltip","btn","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","numeric","disablePadding","VacancyList","match","vacancy","getAllVacancies","params","FormText","minHeight","background","pos","CardVacancy","jobTitle","enterpriseName","jobDescription","location","period","money","func","applyJob","professional","md","Card","CardContent","gutterBottom","CardActions","console","log","onApply","AllVacancies","dados","setDados","selectedAreas","setAreas","submit","getAllJobs","jobList","setJobs","async","jobs","multiple","renderInput","placeholder","abbr","job","stateName","total_period","requirements","cache","function","marginTop","EnterprisesList","enterprises","getAllEnterprises","getAllEnterpriseUsers","clearList","ent","name_enterprise","getOptionLabel","filterSelectedOptions","ProfessionalsList","professionals","getAllProfessionals","codeUF","home_state","stateList","StyledForm","EditUser","setLoading","hasError","getUserById","editUser","EditProfessional","numCols","setCols","hasIdentity","toggleIdentity","getProfessionalById","editProfessional","cnpj","freeSolo","cities","check","EditEnterprise","citiesFromStates","setCities","getEnterpriseById","editEnterprise","filteredStates","setStates","filteredCities","state_id","handleCities","busines_segments","Professionals","registerProfessional","expertiseAreas","FormSelect","Vacancy","registerJob","selectedDate","setSelectedDate","status","handleDateChange","start","Number","hiring_type","StyledButton","Textarea","input","Checkboxes","fields","checkedItem","TitleSearch","SubTitle","h3","WrapperResultSearch","SearchResultEnterprise","Link","CardEnterprise","Name","Destac","Bio","ResultSearchProfessionals","setEnterprise","notRegister","setNotRegister","getEnterpriseAll","getAll","forEach","Array","isArray","arr","enterpriseAll","itemFunctions","dataFunctions","itemSegments","dataSegments","itemFields","dataFields","setForm","diversityFunctions","businessSegments","businessFields","ResultSearchEnterprise","LinkBtn","linkRef","setIsLoading","setProfessionals","getProfessionalAll","getAllUsers","professionalAll","SearchProfessionals","showAdvanced","setShowAdvanced","fixed","CardMyVacancy","deleteFunc","MyJobs","getMyJobs","jobFullList","setFullJobs","deleteJob","deleteMyJob","handleDelete","lowerText","filteredJobs","_job","startsWith","handleText","Forgot","forgotPwd","forgot","resp","Reset","resetPwd","confirmedPassword","App","store","ThemeProvider","path","exact","Admin","VacancyRegister","Professional","AllEnterprises","AllProfessionals","SearchEnterprise","from","authModel","thunk","payload","post","res","removeItem","get","hasAdditionalRegister","response","setErrors","setForgotResp","window","registerModel","userModel","userTypeData","setUser","setError","put","users","vacancyModel","setVacancies","vancancies","enterpriseModel","fuse","userFilter","setEnterprises","professionalModel","delete","op","setProfessionalForEdit","uiModel","storeModel","products","GlobalModels","example","createStore","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffbaf832.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/raio_bemvindo.345f5cb3.png\";","module.exports = __webpack_public_path__ + \"static/media/selo.c1265b6a.png\";","import { createMuiTheme } from '@material-ui/core/styles';\nimport { ptBR } from '@material-ui/core/locale';\n\nconst theme = createMuiTheme({\n  palette: {\n    text: {\n      primary: \"rgba(32, 1, 34, 0.87)\",\n      secondary: \"rgba(32, 1, 34, 0.54)\",\n      disabled: \"rgba(32, 1, 34, 0.38)\",\n      hint: \"rgba(32, 1, 34, 0.38)\"\n    },\n    primary: {\n      main: '#F9A639',\n      light: '#f7cc94',\n      contrastText: '#222'\n    },\n    secondary: {\n      main: '#ba3b1f',\n      dark: '#6f0000'\n    },\n    common: {\n      white: '#f7cc94',\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n}, ptBR);\n\nexport default theme;","import { createBrowserHistory } from 'history'\nexport default createBrowserHistory()\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst CloseButton = ({ onClick, color, isOpened }) => {\n  const compColor = color || 'primary'\n\n  return(\n    <IconButton\n      aria-label=\"menu\"\n      onClick={onClick}\n    >\n      {\n        isOpened ?\n        <CloseIcon color={compColor} fontSize=\"large\" /> :\n        <MenuIcon color={compColor} fontSize=\"large\" />\n      }\n    </IconButton>\n  )\n}\n\nexport default CloseButton\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst DialogTitle = props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle \n      style={{display: 'flex', justifyContent: 'space-between'}}\n      disableTypography \n      {...other}>\n      <Typography component=\"h2\" variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n};\n\n\n\nfunction Modal({ children, isOpen, onClose, title }) {\n  return (\n    <div>\n      <Dialog\n        maxWidth=\"sm\"\n        fullWidth\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        PaperProps={{\n          style: {\n            backgroundColor: '#6f0000',\n            boxShadow: 'none',\n          },\n        }}\n        open={isOpen}>\n        { title && <DialogTitle id=\"customized-dialog-title\" onClose={onClose}>\n          {title}\n      </DialogTitle> }\n        <MuiDialogContent dividers>\n          { children }\n        </MuiDialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Modal","import React from 'react'\nimport ButtonMaterial from '@material-ui/core/Button'\nimport PropTypes from 'prop-types'\n\nconst Button = ({ type, onClick, children, disabled, styles, isLoading, color, variant, size }) => {\n  \n  return (\n    <ButtonMaterial\n    variant={variant}\n    color={color}\n    disabled={disabled}\n    type={type}\n    onClick={onClick}\n    size={size}\n    style={styles}\n    >\n      {children}\n    </ButtonMaterial>\n  )\n}\n\nexport default Button\n\nconst { node, bool, string } = PropTypes\n\nButton.propTypes = {\n  isLoading: bool,\n  /** Children nodes. */\n  children: node,\n  /** Disable button. */\n  disabled: bool,\n  /** Button type. */\n  type: string,\n  /** Button min-width. */\n  minWidth: string,\n  /** Button size. */\n  size: string\n}\n\nButton.defaultProps = {\n  isLoading: false,\n  type: 'button',\n  disabled: false,\n  variant: undefined,\n  color: 'primary',\n  size: 'large'\n}","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nimport Button from '../../comps/Button'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst SignupPopup = ({ toggleModalStatus }) => {\n  const handleClick = userType => {\n    // Where I set what type of user is being registered\n    localStorage.setItem('user_type', userType)\n    return toggleModalStatus()\n  }\n\n  return (\n    <Wrapper>\n        <Link to=\"/cadastro\" onClick={() => handleClick(\"enterprise\")}>\n          <Button variant=\"primary\" size=\"lg\">\n            Empresa\n          </Button>\n        </Link>\n        <Link to=\"/cadastro\" onClick={() => handleClick(\"professional\")}>\n          <Button variant=\"primary\" size=\"lg\">\n            Profissional\n          </Button>\n        </Link>\n    </Wrapper>\n  )\n}\n\n\nexport default SignupPopup","import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\nconst Wrapper = styled.nav`\n  position: relative;\n  background-color: #200122;\n  padding: 5px;\n  transition: .3s all ease-in-out;\n  display: flex;\n  left: 0;\n\n  &.opened {\n    left: -320px;\n  }\n  .container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n`\n\nconst StyledLogo = styled.img`\nmargin-left: 30px;\n`\n\nconst StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: #FC9B55;\n  &:hover {\n    color: #fff;\n  }\n`\nconst StyledBurger = styled.button`\n  outline: none;\n  background: transparent;\n  position: relative;\n  width: 32px;\n  height: 15px;\n  border: none;\n  cursor: pointer;\n\n  &:after,\n  &:before,\n  > span {\n    content: '';\n    width: 20px;\n    height: 2px;\n    background: #fc9b44;\n    display: block;\n    position: absolute;\n  }\n\n  &:before {\n    top: 0;\n  }\n\n  &:after {\n    top: 10px;\n  }\n\n  > span {\n    top: 5px\n  }\n`\n\nconst StyledAside = styled.aside`\n  transition: .3s all ease-in-out;\n  position: fixed;\n  right: -320px;\n  top: 0;\n  width: 320px;\n  height: 100%;\n  background: #6f0000;\n\n  .buttons {\n    padding: 24px 48px;\n    position: relative;\n    flex-direction: column;\n    align-items: flex-start;\n    left: 0;\n\n    a,\n    button {\n      display: block;\n      color: #fc9b44;\n      width: 100%;\n      text-align: left;\n      font-weight: normal;\n    }\n  }\n\n  &.opened {\n    right: 0;\n  }\n`\nexport {\n    Wrapper,\n    StyledLogo,\n    StyledNavLink,\n    StyledBurger,\n    StyledAside\n}","import axios from 'axios'\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common['Authorization'] = token\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common['Authorization']\n  }\n}\n\nexport default setAuthToken\n","import { css } from 'styled-components'\n\nexport const px = (value, defaultValue) => {\n  if (value && typeof value === 'string') {\n    return value\n  }\n\n  const newValue = `${value || defaultValue || 0}px`\n  return css`${newValue}`\n}\n\nexport const emailValidation = () => (\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\n)\n\nexport const isEmpty = (value) => {  \n  return value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0)\n}\n\nexport const parseText = input => input.toLowerCase().split(' ').join('_').normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n\nexport const formatCheckboxFields = (field = []) => {\n  const identifiers = Object.keys(field)\n  return identifiers.filter((i) => field[i])\n}\n\nexport const getUserType = (type) => {\n  switch (type) {\n    case 'enterprise':\n    case 'empresa':\n      return'empresa'\n    case 'professional':\n    case 'profissional':\n      return'profissional'\n    default:\n      return'admin'\n  }\n}\n\nexport const validatingFields = (value) => {\n  if (value) return value;\n\n  switch (typeof value) {\n      case \"number\":\n          return 0;\n      default:\n          return \"\";\n  }\n}\n\n\n\n","import React, { useState,useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport jwtDecode from 'jwt-decode'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport CloseButton from './CloseButton'\n  \nimport Modal from '../../comps/Modal'\nimport SignupPopup from '../../components/popups/Signup'\nimport Button from '../Button'\nimport {\n  Wrapper,\n  StyledLogo,\n  StyledAside,\n  StyledNavLink} from './style';\n  \n  import setAuthToken from '../../utils/setAuthToken'\n  import { isEmpty, getUserType } from '../../utils/service'\n  \n\n  \n  const Header = () => {\n    const [modalStatus, setModalStatus] = useState(false)\n    const setAuth = useStoreActions(actions => actions.auth.setAuth)\n    const logoutUser = useStoreActions(actions => actions.auth.logoutUser)\n    const toggleMenu = useStoreActions(actions => actions.ui.toggleMenu)\n    const auth = useStoreState(state => state.auth.auth)\n    const { menuOpened } = useStoreState(state => state.ui)\n    \n\n    useEffect(() => {\n      if (localStorage.jwtToken) {\n        // Set the auth token header auth\n        setAuthToken(localStorage.jwtToken)\n  \n        // Decode token and get user info and exp\n        const decoded = jwtDecode(localStorage.jwtToken)\n  \n        // Set user and auth\n        setAuth({\n          isAuthenticated: !isEmpty(decoded),\n          user: decoded\n        })\n  \n        // Check for expired token\n        const currentTime = Date.now() / 1000\n        if (decoded.exp < currentTime) {\n          // Logout user\n          // Clear current profile\n          // Redirect to login\n          logoutUser()\n        }\n      }\n    }, [setAuth, logoutUser])\n  \n    const type = getUserType(auth && auth.user.type)\n  \n    return (\n      <Wrapper\n        className={`navbar ${menuOpened && 'opened'}`}\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <Container>\n          <Grid container justify=\"space-between\">\n            <a href=\"https://raio.agency/\">\n              <StyledLogo\n                src=\"https://raio.agency/wp-content/uploads/2020/01/RAIO_logo.png\"\n                width=\"274.141\"\n                height=\"93.594\"\n                alt=\"RAIO Logo\"\n              />\n            </a>\n            <CloseButton\n              aria-label=\"menu\"\n              onClick={() => toggleMenu(!menuOpened)}\n              isOpened={menuOpened}\n            />\n          </Grid>\n          <StyledAside \n            className={menuOpened && 'opened'}\n          >\n            <div className=\"buttons\">\n              <a\n                href=\"https://raio.agency/\"\n                onClick={() => toggleMenu(!menuOpened)}\n              >\n                <Button>Home</Button>\n              </a>\n              {\n                auth && auth.isAuthenticated ?\n                (<>\n                  <NavLink to={`/dashboard/${type}`}>\n                    <Button onClick={() => toggleMenu(!menuOpened)}>\n                      Dashboard\n                    </Button>\n                  </NavLink>\n                  <Button\n                    onClick={() => toggleMenu(!menuOpened)}\n                  ><span onClick={logoutUser}>Sair</span></Button>\n                </>) :\n                (<>\n                  <Button onClick={() => toggleMenu(!menuOpened)}>\n                    <span onClick={() => setModalStatus(!modalStatus)}>\n                      Cadastre-se\n                    </span>\n                  </Button>\n                  <Button onClick={() => toggleMenu(false)}>\n                    <StyledNavLink to=\"/\">\n                      Entrar\n                    </StyledNavLink>\n                  </Button>\n                </>)\n              }\n            </div>\n          </StyledAside>\n        </Container>\n        <Modal\n          title=\"Cadastre-se\"\n          isOpen={modalStatus}\n          onClose={() => setModalStatus(false)}\n        >\n          <SignupPopup\n            toggleModalStatus={() => setModalStatus(!modalStatus)}\n          />\n        </Modal>\n      </Wrapper>\n    )\n  }\n  \n  export default Header\n  ","import styled from 'styled-components'\nimport React, {useState,useEffect} from 'react'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\n  \nconst StyledBody = styled.div`\n  color: #ef9448;\n  position: relative;\n  transition: .3s all ease-in-out;\n  left: 0;\n  \n  &.opened {\n    left: -320px;\n  }\n\n  button:hover {\n    &[type='button'] {\n      color: #200122;\n    }\n  }\n\n  .MuiFormLabel-root,\n  .MuiIconButton-colorPrimary {\n    color: #ef9448;\n  }\n\n  .form-group {\n    display: flex;\n\n    .option {\n      flex: 50%;\n    }\n  }\n\n  a {\n    text-decoration: none;\n  }\n`\n\nconst AppBody = ({ children }) => {\n  const {menuOpened} = useStoreState(state => state.ui)\n\n  return (\n    <StyledBody className={menuOpened && 'opened'}>\n      { children }\n    </StyledBody>\n  )\n}\n  \n  export default AppBody\n  ","import React, { useState, useEffect } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport SelectMaterial from '@material-ui/core/Select'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\n\nconst Select = ({ label, register, name, options, value, onChange, error }) => {\n  const [ opt, setOpt ] = useState(value)\n  \n  \n  const handleChange = value => {\n    setOpt(value)\n    if(onChange)\n      onChange(value)\n  }\n  \n  return(\n    <FormControl fullWidth>\n      <InputLabel htmlFor=\"self_declaration\">{label}</InputLabel>\n      <SelectMaterial\n        native\n        inputRef={register}\n        defaultValue={opt}\n        variant=\"filled\"\n        onChange={(e) => handleChange(e.target.value)}\n        inputProps={{\n          name: name,\n        }}\n      >\n        <option value=\"\" />\n        {\n          options.map((option, index) => {\n            return option.value ?\n              <option key={index} value={option.value}>{option.name}</option> :\n              <option key={index} value={option}>{option}</option>\n          })\n        }\n      </SelectMaterial>\n      {error && <FormHelperText error>{error}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default Select","export const If = ({ condition, children }) => (condition ? children : false);\n\nexport const IfElse = ({ condition, True, False }) =>\n  condition ? True : False;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledText = styled.p`\n  ${props => `font-size: ${props.size || '11px'};`}\n  ${props => `color: ${props.color || '#000'};`}\n  ${props => `font-weight: ${props.weight || '400'};`}\n  ${props => `margin: ${props.margin || '0'};`}\n`\n\n\nconst Text = ({ children, ...props }) => <StyledText {...props}>{children}</StyledText>\n\nexport default Text","import React from 'react'\nimport { If } from './If'\nimport Text from './Text'\n\nexport const Error = ({ msg }) => (\n  <If condition={typeof msg === 'string'}>\n    <Text\n      color=\"#f14668\"\n      size=\".75rem\"\n      margin=\"0 0 .75rem 0\"\n      weight=\"600\"\n    >\n      {msg}\n    </Text>\n  </If>\n)\n\nexport const Success = ({ msg }) => (\n  <If condition={msg !== ''}>\n    <Text\n      color=\"#1ee81e\"\n      size=\".75rem\"\n      margin=\"0 0 .75rem 0\"\n      weight=\"600\"\n    >\n      {msg}\n    </Text>\n  </If>\n)\n","export const segment = [\"Desenvolvedora de conteúdo\", \"Produtora de conteúdo\", \"Distribuidora de conteúdo\", \"Exibidora de conteúdo\", \"Empacotadora de conteúdo\", \"Programadora de conteúdo\", \"Outros\"]\n\nexport const actions = [\"Streaming\", \"Cinema\", \"Publicidade\", \"Televisão\", \"Games\", \"Internet\", \"Outros\"]\n\nexport const functions = [\"Produtor(a) de Conteúdo\", \"Roteirista\", \"Consultor(a) de Roteiro\", \"Pesquisador(a)\", \"Produtor(a) Executivo\", \"Controller\", \"Diretor(a) de Produção\", \"Assistente de Produção\", \"Platô\", \"Direto(a)\", \"Assistente de Direção\", \"StoryBoarder\", \"Continuista\", \"Produtor(a) de Elenco\", \"Preparador(a) de Elenco\", \"Diretor(a) de Arte\", \"Produtor(a) de Arte\", \"Cenógrafo(a)\", \"Produtor(a) de objetos\", \"Figurinista\", \"Caracterizador(a)\", \"Supervisor(a) de Efeitos Especiais\", \"Chefe de Maquinária\", \"Assistente de Máquinaria\", \"Chefe de Elétrica | Gaffer\", \"Eletricista de Pré-Light\", \"Diretor(a) de Fotografia\", \"Operador(a) de Câmera\", \"Assistente de Câmera\", \"DIT | Técnico(a) de Imagem Digital - TID\", \"GMA | Logger\", \"Still\", \"Operador(a) de Video Assist\", \"Técnico(a) de Som\", \"Assistente de Som\", \"Editor(a)\", \"Assistente de Edição\", \"Supervisor(a) de Pós-Produção\", \"Assistente de Pós-Produção\", \"Supervisor(a) de Efeitos Visuais\", \"Produtor(a) de Efeitos Visuais\", \"Editor(a) On-line\", \"Correção de Cor\", \"Editor(a) de Som\", \"Legendagem\", \"Supervisor(a) Musical\", \"Compositor(a) Musical\", \"Animador(a)\"]\n\nexport const color = [\"Negra\", \"Branca\", \"Indigena\", \"Amarela\", \"Outros\"]\n\nexport const gender = [\"Mulher Cis\", \"Mulher Trans\", \"Homem Cis\", \"Homem Trans\", \"Queer\", \"Não Binário\", \"Outro\"]\n\nexport const identitySegments = [\"Audiovisual Negro\", \"Audiovisual Indígena\", \"Audiovisual LGBTI+\", \"Audiovisual Feminista\", \"Audiovisual Queer\", \"Audiovisual Ambiental\", \"Outro\"]\n\nexport const registryTypes = [\"MEI\", \"EIRELI\", \"ME\", \"Outro\"]\n\nexport const hiringType = [\"CLT\", \"PJ\", \"RPA\"]\n\nexport const formations = [\"Autodidata\", \"ONG ou Instituição Cultural\", \"Formação Técnica\", \"Universidade ou Faculdade\"]\n\nexport const cnpj_type = [\"EIRELI\", \"LTDA\", \"ME\", \"MEI\", \"S.A\"]\n\nexport const separated_functions = [\n  {\n      title: 'DESENVOLVIMENTO',\n      list: [\"Consultoria de Roteiro\", \"Pesquisa\",\"Produçāo Executiva\",\"Produçāo de Conteúdo\", \"Roteiro\"]\n  },\n  {\n      title: 'PRODUÇĀO',\n      list: [\"Assistência de direção\",\"Assistência de câmera\", \"Assistência de Maquinária\",\"Assistência de som\",\n      \"Caracterizaçāo\", \"Cenografia\", \"Chefia de Elétrica  | Gaffer\", \"Chefia de Maquinária\", \"Continuidade\", \"Controller\",\n      \"Direçāo\", \"Direçāo de Arte\", \"Direçāo de Fotografia\", \"Direçāo de Produção\", \"DIT | Técnico de Imagem Digital - TID\",\n      \"Eletricista de Pré- Light\", \"Figurino\", \"GMA | Logger\", \"Operaçāo de Video Assistente\", \"Operaçāo de Câmera\", \"Platô\",\n      \"Preparaçāo de Elenco\", \"Produçāo de Elenco\", \"Produçāo de Arte\", \"Produçāo de Objetos\", \"Still\", \"StoryBoard\",\n      \"Supervisāo de Efeitos Especiais\", \"Técnica de som\"]\n  },\n  {\n      title: 'PÓS-PRODUÇÃO',\n      list: [\"Animaçāo\", \"Assistência  de edição \", \"Composiçāo Musical\", \"Correção de Cor\",\n      \"Ediçāo On-line\",\"Ediçāo de Som\",\"Ediçāo\",\"Legendagem\",\"Supervisāo de Efeitos Visuais\",\n      \"Supervisāo de Pós-Produção\", \"Supervisāo  Musical\"]\n  },\n]","import styled from 'styled-components'\n\nexport const Form = styled.form`\n  width: 50%;\n  margin: 25px;\n  padding: 30px;\n`\n\nexport const Success = styled.div`\n  color: #79A9D2;\n  font-weight: 600;\n  margin-top: 20px;\n`\n\nexport const Background = styled.div`\n  height: 100%;\n\n  h2 {\n    text-align: center;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n\n  form {\n    > * {\n      margin: 5px 0;\n    }\n  }\n`\n\nexport const WrapButton = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`\n\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  font-weight: 600;\n  color: #000;\n  text-align: center;\n  margin-bottom: 20px;\n`","import React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport uuid from 'uuid'\n\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '../../comps/Button'\nimport Select from '../../comps/Select'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport { Error } from '../../components/Status'\n\nimport { emailValidation } from '../../utils/service'\nimport {\n  gender,\n  color\n} from './dicioFields'\n\nimport { Form, Background, WrapButton } from './styles'\n\nconst Users = () => {\n  const { register, handleSubmit, errors, getValues, reset } = useForm()\n\n  const registerUser = useStoreActions(actions => actions.register.registerUser)\n  const [modalStatus, setModalStatus] = useState(false)\n  const registerError = useStoreState(state => state.register.error)\n  const labelName = localStorage.user_type === 'enterprise' ? 'Nome do Responsável' : 'Nome'\n  const onSubmit = (data) => {\n    const formatted = {\n      ...data,\n      confirm_password: data.confirmPassword,\n      self_declaration: data.selfDeclaration,\n      type: localStorage.user_type\n    }\n\n    reset()\n    setModalStatus(true)\n    setTimeout(() => {\n      registerUser(formatted)\n    }, 3000)\n  }\n\n  useEffect(() => {\n    if (typeof localStorage.user_type === 'undefined') return setModalStatus(true)\n  }, []);\n\n  return (\n    <section className=\"container\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n        <Typography\n          color=\"primary\"\n          variant=\"h3\"\n          style={{textAlign: 'center', margin: '30px 0'}}\n          component=\"h2\">Formulário de inscrição do Usuário</Typography>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              name=\"email\"\n              fullWidth\n              error={errors.email && errors.email.message}\n              helperText={errors.email && errors.email.message}\n              inputRef={register({\n                required: 'Esse campo é obrigatório',\n                pattern: {\n                  value: emailValidation(),\n                  message: 'Insira um endereço de e-mail válido'\n                }\n              })}\n              label=\"Endereço de e-mail\"\n              variant=\"filled\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              name=\"password\"\n              fullWidth\n              type=\"password\"\n              error={errors.password && errors.password.message}\n              helperText={errors.password && errors.password.message}\n              inputRef={register({\n                required: 'Insira uma senha',\n              })}\n              label=\"Senha\"\n              variant=\"filled\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              name=\"confirmPassword\"\n              fullWidth\n              type=\"password\"\n              error={errors.confirmPassword && errors.confirmPassword.message}\n              helperText={errors.confirmPassword && errors.confirmPassword.message}\n              inputRef={register({\n                required: 'Confirme sua senha',\n                validate: {\n                  isMatch: value => value === getValues().password || 'As senhas não combinam, tente novamente',\n                },\n                minLength: {\n                  value: 6,\n                  message: 'A senha precisa ter no mínimo 6 caracteres'\n                }\n              })}\n              label=\"Confirme sua senha\"\n              variant=\"filled\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              name=\"name\"\n              fullWidth\n              error={errors.name && errors.name.message}\n              helperText={errors.name && errors.name.message}\n              inputRef={register({\n                required: 'Esse campo é obrigatório'\n              })}\n              label={labelName}\n              variant=\"filled\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              name=\"phone\"\n              fullWidth\n              error={errors.phone && errors.phone.message}\n              helperText={errors.phone && errors.phone.message}\n              inputRef={register({\n                required: 'Esse campo é obrigatório',\n                pattern: {\n                  message: 'Insira apenas números'\n                },\n                maxLength: {\n                  value: 11,\n                  message: 'Máximo de onze números'\n                }\n              })}\n              label=\"Contato Telefonico (DDD + nº)\"\n              variant=\"filled\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Select \n              name=\"gender\"\n              error={errors.gender && errors.gender.message}\n              helperText={errors.gender && errors.gender.message}\n              inputRef={register({\n                required: 'Esse campo é obrigatório'\n              })}\n              options={gender}\n              register={register}\n              label=\"Gênero\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Select \n              name=\"selfDeclaration\"\n              error={errors.selfDeclaration && errors.selfDeclaration.message}\n              helperText={errors.selfDeclaration && errors.selfDeclaration.message}\n              inputRef={register({\n                required: 'Esse campo é obrigatório'\n              })}\n              options={color}\n              register={register}\n              label=\"Auto Declaração\"\n            />\n          </Grid>\n        </Grid>\n\n\n          <Error msg={registerError && registerError.user} />\n\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                styles={{display: 'block', width: '100%'}}\n              >\n                Enviar\n              </Button>\n            </Grid>\n          </Grid>\n           \n        </form>\n      \n        <Snackbar open={modalStatus} autoHideDuration={3000} onClose={() => setModalStatus(false)}>\n          <Alert elevation={6} variant=\"filled\" onClose={() => setModalStatus(false)} severity=\"success\">\n            Usuário cadastrado com sucesso!\n          </Alert>\n        </Snackbar>\n    </section>\n  )\n}\n\nexport default Users","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nconst Text = ({ children, color, size, align, style }) => {\n  const compColor = color || 'contrastText'\n  const compSize = size || 'body2'  \n  return(\n    <Typography\n      align={align}\n      variant={compSize}\n      component='p'\n      color={compColor}\n      style={{...style, display: 'block'}}\n    >\n      {children}\n    </Typography>\n  )\n}\n\nexport default Text","import React from 'react'\nimport Text from '../Text'\n\nconst getSize = size => {\n  let component;\n\n  switch(size) {\n    case 'xs':\n      component = 'h6'\n      break\n    case 'sm':\n      component = 'h5'\n      break\n    case 'md':\n      component = 'h4'\n      break\n    case 'lg':\n      component = 'h3'\n      break\n    case 'xl':\n      default:\n      component = 'h2'\n      break\n  }\n  return component\n}\n\nconst Title = ({ children, color, size, align, style }) => {\n  const compColor = color || 'primary'\n  const compSize = getSize(size)\n  return(\n    <Text\n      align={align}\n      size={compSize}\n      color={compColor}\n      style={style}\n    >\n      <strong>{children}</strong>\n    </Text>\n  )\n}\n\nexport default Title\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\nexport const FullWidth = styled.div`\n  width: 100%;\n  padding: 40px;\n`\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 20px;\n`\n\nexport const Background = styled.div`\n  height: calc(100vh - 200px);\n\n  button[type='submit'] {\n    display: block;\n    width: 100%;\n  }\n\n  h2 {\n    text-align: center;\n  }\n`\n\nexport const Title = styled.h1`\n  color:#000;\n  font-size: 40px;\n`","import React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\n\nimport Email from '@material-ui/icons/Mail'\nimport Senha from '@material-ui/icons/Lock'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl'\nimport FilledInput from '@material-ui/core/FilledInput'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport { Error } from '../../components/Status'\nimport Button from '../../comps/Button'\nimport Title from '../../comps/Title'\n\nimport {\n  Background\n} from './style'\nimport { emailValidation } from '../../utils/service'\nimport history from '../../history'\n\nconst Login = () => {\n  const { register, handleSubmit, errors } = useForm()\n  const [modalStatus, setModalStatus] = useState(false)\n  const [modalMsg, setModalMsg] = useState('')\n  const authUser = useStoreActions(actions => actions.auth.authUser)\n  const auth = useStoreState(state => state.auth.auth)\n  const loginError = useStoreState(state => state.auth.error)\n  const onSubmit = (data) => authUser(data)\n\n  useEffect(() => {\n    if (auth) {\n      const { user: { type = '' }, isAuthenticated } = auth\n      if (isAuthenticated) return history.push(`/dashboard/${type}`)\n    }\n\n    if(loginError && loginError.message){\n      setModalMsg(loginError.message)\n      setModalStatus(true)\n    }\n  }, [auth, loginError])\n\n  return (\n    <Container\n      center=\"true\"\n      style={{\n        height: 'calc(100vh - 107px)',\n        display: 'flex',\n        alignItems: 'center'}}\n        >\n        <Grid container alignItems=\"stretch\" justify=\"space-between\">\n          <form style={{width: '100%'}} onSubmit={handleSubmit(onSubmit)}>\n            <Title>\n              Entre na Raio\n            </Title>\n\n            <FormControl fullWidth style={{margin: '10px 0'}} variant=\"filled\">\n              <InputLabel htmlFor=\"filled-adornment-password\">E-mail</InputLabel>\n              <FilledInput\n                type=\"text\"\n                name=\"email\"\n                error={errors.email !== undefined}\n                inputRef={register({\n                  required: 'Esse campo é obrigatório',\n                  pattern: {\n                    value: emailValidation(),\n                    message: 'Insira um endereço de e-mail válido'\n                  }\n                })}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                      <Email color=\"primary\"/>\n                  </InputAdornment>\n                }\n              />\n              {errors.email && (<FormHelperText error>{errors.email.message}</FormHelperText>)}\n            </FormControl>\n\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel htmlFor=\"filled-adornment-password\">Senha</InputLabel>\n              <FilledInput\n                type=\"password\"\n                name=\"password\"\n                error={errors.password !== undefined}\n                inputRef={register({\n                  required: 'Esse campo é obrigatório',\n                  minLength: {\n                    value: 6,\n                    message: 'A senha deve ter no mínimo 6 caracteres'\n                  }\n                })}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                      <Senha color=\"primary\" />\n                  </InputAdornment>\n                }\n              />\n              {errors.password && (<FormHelperText error>{errors.password.message}</FormHelperText>)}\n            </FormControl>\n\n          <Link to=\"/esqueci-senha\">\n            <Button>\n              esqueceu sua senha?\n            </Button>\n          </Link>\n\n          <Button variant=\"contained\" type=\"submit\">\n            Entrar\n          </Button>\n          </form>\n        </Grid>\n        <Snackbar open={modalStatus} autoHideDuration={3000} onClose={() => setModalStatus(false)}>\n          <Alert elevation={6} variant=\"filled\" onClose={() => setModalStatus(false)} severity=\"error\">\n            {modalMsg}\n          </Alert>\n        </Snackbar>\n    </Container>\n  )\n}\n\nexport default Login\n","import React from 'react';\nimport loading from '../../assets/loading.svg';\nimport './style.css';\n\nexport default function Loading()\n{\n    return(\n        <div className={'general-loading'}>\n            <img src={loading} alt={''}/>\n        </div>\n    );\n}\n","import states from '../../assets/states.json'\n\nexport const getState = (\n  stateID,\n  searchFor = 'id',\n  format = 'abbr') => states.filter(state => state[searchFor] == stateID)[0][format]\n\nfunction formatPhone(num){\n    num=num.replace(/\\D/g,\"\");             \n    num=num.replace(/^(\\d{2})(\\d)/g,\"($1) $2\"); \n    num=num.replace(/(\\d)(\\d{4})$/,\"$1-$2\");\n    return num;\n}\n\n\n\nexport const getInfo = (user, type) => {\n  return type === 'professional' ? \n  [\n    {\n      title: 'Identificação',\n      values: [\n        {\n          campo: 'Gênero',\n          valor: user.gender\n        },\n        {\n          campo: 'Auto declaração',\n          valor: user.self_declaration\n        },\n        {\n          campo: 'Data de nascimento',\n          valor: user.birthday\n        }\n      ]\n    },\n    {\n      title: 'Localização',\n      values: [\n        {\n          campo: 'Endereço',\n          valor: user.address\n        },\n        {\n          campo: 'Cidade',\n          valor: user.city\n        },\n        {\n          campo: 'Estado',\n          valor: getState(user.state)\n        }\n      ]\n    },\n    {\n      title: 'Contato',\n      values: [\n        {\n          campo: 'Telefone',\n          valor: formatPhone(user.phone)\n        },\n        {\n          campo: 'E-mail',\n          valor: user.user_email\n        },\n        {\n          campo: 'Links',\n          valor: user.links\n        }\n      ]\n    },\n    {\n      title: 'Formação',\n      values: [\n        {\n          campo: 'Tipo de Formação',\n          valor: user.education\n        },\n        {\n          campo: 'Instituição',\n          valor: user.formation_institution\n        },\n        {\n          campo: 'Áreas de atuação',\n          valor: (user.expertise_areas && user.expertise_areas.length > 0) &&\n            user.expertise_areas.join(', ') || 'Nenhum'\n        }\n      ]\n    },\n  ] :\n  [\n    {\n      title: 'Localização',\n      values: [\n        {\n          campo: 'Cidade',\n          valor: user.city\n        },\n        {\n          campo: 'Estado',\n          valor: getState(user.state)\n        },\n        {\n          campo: 'Data de fundação',\n          valor: user.foundation_date\n        },\n        {\n          campo: 'Outros Estados',\n          valor: (user.other_states && user.other_states.join(', ')) || 'Nenhum'\n          // .map(uf => getState(uf, 'name')).join(', ')\n        }\n      ]\n    },\n    {\n      title: 'Contato',\n      values: [\n        {\n          campo: 'Nome do Responsável',\n          valor: user.name\n        },\n        {\n          campo: 'Telefone',\n          valor: formatPhone(user.phone)\n        },\n        {\n          campo: 'E-mail',\n          valor: user.user_email\n        },\n        {\n          campo: 'Links',\n          valor: user.links\n        }\n      ]\n    },\n    {\n      title: 'Especialização',\n      values: [\n        {\n          campo: 'Campos de atuação',\n          valor: (user.business_fields && user.business_fields.join(', ')) || 'Nenhum'\n          // .join(', ')\n        },\n        {\n          campo: 'Segmentos de conteúdo identitário',\n          valor: (user.identity_segments && user.identity_segments.join(', ')) || 'Nenhum'\n          // .join(', ')\n        },\n        {\n          campo: 'Funções que busca diversificar na empresa',\n          valor: (user.identity_segments && user?.diversity_functions.join(', ')) || 'Nenhum'\n          // .join(', ')\n        }\n      ]\n    },\n    {\n      title: 'Identificação',\n      values: [\n        {\n          campo: 'Tipo de CNPJ',\n          valor: user.cnpj_type\n        },\n        {\n          campo: 'Responsável',\n          valor: user.name\n        },\n        {\n          campo: 'Gênero',\n          valor: user.gender\n        },\n        {\n          campo: 'Auto declaração',\n          valor: user.self_declaration\n        },\n      ]\n    },\n  ]\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport Star from '@material-ui/icons/Star'\nimport PcD from '@material-ui/icons/Accessible'\nimport Title from './../../comps/Title'\nimport Text from './../../comps/Text'\nimport Button from '../../comps/Button'\n// import { getKeys } from '../../utils/formatter'\n\nconst StyledProfile = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  justify-content: space-between;\n  margin-right: 40px;\n\n  .main-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .image {\n    width: 80px;\n    height: 80px;\n    border-radius: 100%;\n    color: #f7cc94;\n    background: #200122;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .associate {\n    display: flex;\n    align-items: center;\n  }\n\n  .bio {\n    text-align: justify;\n    word-break: break-all;\n  }\n\n  .segments {\n    color: #200122;\n    text-align: center;\n    margin-top: 20px;\n  }\n\n  h2, h3, h4, h6 {\n    color: #200122;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`\n\nfunction Profile({ id, icon, name, associate, bio, type, segments, pcd }) {\n  return (\n    <StyledProfile className='profile'>\n      <div className=\"main-info\">\n        <span className=\"image\">{icon}</span>\n        <Title size=\"md\"><strong>{name}</strong></Title>\n        <Title size=\"xs\"><strong>Perfil {type}</strong></Title>\n        { associate && (\n          <div className=\"associate\">\n            <Star color=\"secondary\" />\n            <Text color=\"secondary\">Associado APAN</Text>\n          </div>)\n        }\n        { pcd && (\n          <div className=\"associate\">\n            <PcD color=\"secondary\" />\n            <Text color=\"secondary\">PcD</Text>\n          </div>)\n        }\n      </div>\n\n      <section className=\"segments\">\n        <Title size=\"xs\">{type === \"Empresa\" ? 'Apresentação' : 'Bio'}</Title>\n        <Text className=\"bio\" color=\"secondary\">{bio}</Text>\n      </section>\n\n      {segments && segments.length > 0 &&\n      <section className=\"segments\">\n        <Title size=\"xs\">Segmentos de atuação</Title>\n        <Text color=\"secondary\">{segments.join(', ') || 'Nenhum'}</Text>\n      </section>}\n\n      <Link\n        className=\"fixed-bottom\"\n        to={`/editar/${type.toLowerCase()}/${id}`}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n          >\n            Editar dados de {type}\n          </Button>\n        </Link>\n    </StyledProfile>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Title from './../../comps/Title'\nimport Text from './../../comps/Text'\n\nconst StyledInfo = styled.div`\n  width: 100%;\n  margin-right: 70px;\n  \n  .sec {\n    margin-bottom: 20px;\n    border-bottom: 2px solid rgba(26,26,26, .2);\n    &:last-child {\n      border-bottom-color: transparent;\n    } \n\n    h6 {\n      color: #200122;\n    }\n  }\n\n  .values {\n    display: flex;\n    \n    justify-content: space-between;\n\n    .field {\n      width: 30%;\n      display: flex;\n      flex-direction: column;\n\n      strong {\n        color: #200122;\n      }\n    }\n  }\n`\n\nfunction Info({infoList}) {\n  return (\n    <StyledInfo className='info'>\n      {\n        infoList.map(info => (\n          <div className=\"sec\" key={info.title}>\n            <Title align=\"left\" size=\"xs\"><strong>{info.title}</strong></Title>\n            <div className=\"values\">\n              {\n                info.values.map(val => (\n                  <div className=\"field\" key={val.campo}>\n                    <Text color=\"primary\"><strong>{val.campo}</strong></Text>\n                    <Text color=\"secondary\">{val.valor}</Text>\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n        ))\n      }\n    </StyledInfo>\n  )\n}\n\nexport default Info\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst ModalStyled = styled.div`\n  display: ${props => !props.isOpen ? 'none' : 'block'}; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  bottom: 0;\n  overflow: auto; /* Enable scroll if needed */\n  background-color: transparent; /* Fallback color */\n  \n`\n\nconst ModalContentStyled = styled.div`\n  background-color: #fefefe;\n  margin: 15% auto; /* 15% from the top and centered */\n  padding: 20px;\n  border: 1px solid #888;\n  width: ${props => `${props.width}`}; /* Could be more or less, depending on screen size */\n  background-color: #fc9b44;\n  border: none;\n  border-radius: 4px;\n`\n\nconst CloseButtonStyled = styled.div`\n  color: rgba(0,0,0,.3);\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n\n  &:hover,\n  &:focus {\n    color: #FFFF;\n    text-decoration: none;\n    cursor: pointer;\n  }\n`\n\n\nconst Modal = ({ children, isOpen, onClose, width }) => (\n  <ModalStyled isOpen={isOpen}>\n    <ModalContentStyled width={width}>\n      <CloseButtonStyled onClick={onClose}>&times;</CloseButtonStyled>\n      {children}\n    </ModalContentStyled>\n  </ModalStyled>\n)\n\nModal.propTypes = {\n  /** Flag used to control modal open and close */\n  isOpen: PropTypes.bool,\n  /** Width of modal content in percent (%) */\n  width: PropTypes.string,\n  /** Function used when closing modal */\n  onClose: PropTypes.func.isRequired\n}\n\nModal.defaultProps = {\n  opened: false,\n  width: 30\n}\n\n/** @component */\nexport default Modal","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst FormButton = ({ type, variant, color, children }) => {\n  const compColor = color || 'primary'\n  const compVariant = variant || 'contained'\n  const classes = useStyles()\n  return (\n    <Button\n      type={type}\n      variant={compVariant}\n      size=\"large\"\n      className={classes.margin}\n      color={compColor}>\n    {children}\n  </Button>\n)}\n\nexport default FormButton","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport Person from '@material-ui/icons/Person'\n\nimport Enterprise from '@material-ui/icons/AccountBalanceOutlined'\nimport Delete from '@material-ui/icons/Delete';\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Loading from \"../../components/loading\";\nimport { getInfo } from './user_info'\n// import uuid from 'uuid'\n\nimport Profile from './Profile'\nimport Info from './Info'\nimport Modal from '../../components/Modal'\nimport NewModal from '../../comps/Modal'\nimport Button from '../../comps/FormButton'\nimport welcome from '../../assets/raio_bemvindo.png'\nimport seloPlans from '../../assets/selo.png'\nimport loading from '../../assets/loading.svg'\n// import {\n//   Background,\n// } from './style'\n\nconst Dashboard = () => {\n  const userType = useStoreState(state => state.auth.auth.user)\n  const getUser = useStoreActions(actions => actions.user.getUser)\n  const user = useStoreState(state => state.user.user)\n  const hasVacancies = user.vacancies - user.usedVacancies > 0;\n\n  const [modalStatus, setModalStatus] = useState(false)\n  const [modalInfoPlans, setModalInfoPlans] = useState(false)\n  const [modalBoasVindas, setModalBoasVindas] = useState(false)\n\n  useEffect(() => {\n    typeof userType.type !== 'undefined' && getUser(userType.type)\n    // if (userType.type === \"professional\") setModalBoasVindas(true)\n    // if (userType.type === \"enterprise\") setModalInfoPlans(true)\n\n    // setTimeout(() => {\n    //   setModalBoasVindas(false)\n    //   setModalInfoPlans(false)\n    // }, 3000)\n\n  }, [userType, getUser])\n\n  return (\n    <Container>\n      {Object.values(user).length ? (\n      <>\n        <Paper style={{backgroundColor: '#f7cc94', padding: '15px'}}>\n          <Grid container>\n            <Grid item xs={4}>\n              <Profile\n                id={user._id}\n                name={user.enterprise_name || user.name}\n                icon={ userType.type === \"enterprise\" ?\n                  <Enterprise style={{ fontSize: 60 }} /> :\n                  <Person style={{ fontSize: 60 }} /> }\n                associate={user.apan_associate}\n                type={userType.type === \"enterprise\" ? \"Empresa\" : \"Profissional\"}\n                bio={userType.type === \"enterprise\" ? user.presentation : user.bio}\n                pcd={user.pcd}\n                segments={userType.type === \"enterprise\" ? user.business_segments : user.identity_segments}\n              />\n\n            </Grid>\n            <Grid item xs={8}>\n              <Info\n                infoList={getInfo(user, userType.type)}\n              />\n            </Grid>\n          </Grid>\n\n        </Paper>\n\n      <Container>\n      {userType.type === \"enterprise\" ?\n        (<>\n          {!hasVacancies ? <Link to=\"/cadastro/vaga\">\n              <Button variant=\"contained\">\n                Cadastrar Vagas\n              </Button>\n            </Link> :\n            <a href=\"http://raio.agency/planos\">\n              <Button variant=\"contained\">\n                Cadastrar Vagas\n              </Button>\n            </a>\n            }\n            { !(user && user.usedVacancies > 0) &&\n            (<Link to={`/listagem/vagas/${user.enterprise_id}`}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n\n              >\n                Ver minhas vagas\n              </Button>\n            </Link>) }\n            <Link to={'/busca/profissionais'}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Buscar profissional\n              </Button>\n            </Link>\n        </>) :\n        (<>\n        <Link to={`/listagem/vagas`}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Ver vagas\n          </Button>\n        </Link>\n        <Link to={`/listagem/candidaturas`}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Ver minhas candidaturas\n          </Button>\n        </Link>\n        </>)\n      }\n\n\n      <Link to={`/editar/usuario/${user.user_id}`}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Editar Dados de Acesso\n        </Button>\n      </Link>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n\n          onClick={() => setModalStatus(true)}\n        >\n          Deletar Perfil\n        </Button>\n      </Container>\n\n      <Modal\n        isOpen={modalBoasVindas}\n        onClose={() => setModalBoasVindas(false)}\n        width=\"300px\"\n      >\n        <img  style={{width: '300px'}} src={welcome} alt={''} />\n      </Modal>\n\n      <NewModal\n        isOpen={modalStatus}\n        onClose={() => setModalStatus(false)}\n        title=\"Deseja realmente excluir sua conta?\"\n      >\n        <Button color=\"dark\"><Delete />Excluir</Button>\n      </NewModal>\n        <Modal\n        isOpen={modalInfoPlans}\n        onClose={() => setModalInfoPlans(false)}\n        width=\"300px\"\n      >\n       <img src={seloPlans} alt={''} />\n       </Modal>\n      </>) :\n       <Loading/>}\n    </Container>\n  )\n}\n\nexport default Dashboard\n","import React from \"react\"\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Enterprise from '@material-ui/icons/AccountBalanceOutlined'\nimport Person from '@material-ui/icons/Person'\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport history from '../../../history';\n// import { Link } from 'react-router-dom'\n// import Typography from '@material-ui/core/Typography'\n// import Enterprise from '@material-ui/icons/AccountBalanceOutlined'\n// import Person from '@material-ui/icons/Person'\n// import { WrapperChoices, Title, Background } from './style'\n\nconst DashboardWrapper = () => {\n  const handleLink = (href) => history.push(href)\n  return (\n    <Container style={{\n      height: 'calc(100vh - 108px)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }}>\n      <Paper style={{ backgroundColor: '#f7cc94', width: '50%' }}>\n        <List\n          component=\"nav\"\n          aria-labelledby=\"nested-list-subheader\"\n          subheader={\n            <ListSubheader component=\"div\"  id=\"nested-list-subheader\">\n              Escolha uma visão\n            </ListSubheader>\n          }\n        >\n          <ListItem button onClick={() => handleLink(\"/dashboard/admin/empresas\")}>\n            <ListItemIcon>\n              <Enterprise />\n            </ListItemIcon>\n            <ListItemText primary=\"Empresa\" />\n          </ListItem>\n          <ListItem button onClick={() => handleLink(\"/dashboard/admin/profissionais\")}>\n            <ListItemIcon>\n              <Person />\n            </ListItemIcon>\n            <ListItemText primary=\"Profissional\" />\n          </ListItem>\n        </List>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default DashboardWrapper","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { px } from '../utils/service'\n\nconst Flexbox = styled(({ children, className }) => {\n  return (\n    <div className={className}>\n      {children}\n    </div>\n  )\n})`\n  display: flex;\n\n  ${props => props.horizontal && `\n    flex-direction: row;\n  `}\n  ${props => props.vertical && `\n    flex-direction: column;\n  `}\n\n  ${props => props.center && `\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n  `}\n\n  ${props => props.end && `\n    align-items: end;\n    justify-content: flex-end;\n  `}\n\n  ${props => props.justify && `\n    justify-content: ${props.justify};\n  `}\n\n  ${props => props.align && `\n    align-items: ${props.align};\n  `}\n\n  ${props => props.width && `\n    width: ${props.width};\n  `}\n\n  ${props => props.margin && props.margin.top && `margin-top: ${px(props.margin.top)};`}\n  ${props => props.margin && props.margin.bottom && `margin-bottom: ${px(props.margin.bottom)};`}\n  ${props => props.margin && props.margin.left && `margin-left: ${px(props.margin.left)};`}\n  ${props => props.margin && props.margin.right && `margin-right: ${px(props.margin.right)};`}\n\n  ${props => props.padding && props.padding.top && `padding-top: ${px(props.padding.top)};`}\n  ${props => props.padding && props.padding.bottom && `padding-bottom: ${px(props.padding.bottom)};`}\n  ${props => props.padding && props.padding.left && `padding-left: ${px(props.padding.left)};`}\n  ${props => props.padding && props.padding.right && `padding-right: ${px(props.padding.right)};`}\n`\n\n// decouple PropTypes only facility design props\nconst { shape, oneOfType, string, number } = PropTypes\n\nFlexbox.propTypes = {\n  horizontal: PropTypes.bool,\n  vertical: PropTypes.bool,\n  center: PropTypes.bool,\n  end: PropTypes.bool,\n  justify: PropTypes.oneOf(['space-around', 'space-between', 'center', 'space-evenly', 'flex-end']),\n  align: PropTypes.oneOf(['center', 'flex-end', 'flex-start']),\n  width: PropTypes.string,\n  /** The margin property. */\n  margin: shape({\n    top: oneOfType([string, number]),\n    bottom: oneOfType([string, number]),\n    left: oneOfType([string, number]),\n    right: oneOfType([string, number])\n  }),\n  /** The padding property. */\n  padding: shape({\n    top: oneOfType([string, number]),\n    bottom: oneOfType([string, number]),\n    left: oneOfType([string, number]),\n    right: oneOfType([string, number])\n  })\n}\n\nFlexbox.defaultProps = {\n  margin: {},\n  padding: {},\n}\n\nFlexbox.displayName = 'Flexbox'\n\nexport default Flexbox\n","const parseDate = date => {\n  const day = date.substring(8, 10)\n  const month = date.substring(5, 7)\n  const year = date.substring(0, 4)\n\n  return `${day}/${month}/${year}`\n}\n\nconst dateToString = date => {\n  const day = date.substring(0, 2)\n  const month = date.substring(3, 5)\n  const year = date.substring(6, 10)\n\n  return `${year}-${month}-${day}`\n}\n\nconst getState = (codeUF, stateList) => stateList.filter(uf => uf.id === codeUF)[0].abbr\n\nconst checkSegments = segment => {\n  const segments = Object.keys(segment[0])\n  const values = Object.values(segment[0])\n  if (values.every(el => el === false))\n    return [\"Nenhum\"]\n\n  return segments.filter((v, i) => segment[0][v] && segments[i])\n}\n\nfunction getKeys (obj) {\n  var keys = Object.keys(obj);\n\n  var filtered = keys.filter(key => obj[key]);\n  return filtered.join(', ')\n}\n\nconst normalizeArrayData = data => {\n  return data ?\n    getKeys(data).split(', ').filter(item => item !== \"\") :\n    []\n}\nexport {\n  getState,\n  getKeys,\n  parseDate,\n  dateToString,\n  checkSegments,\n  normalizeArrayData,\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { getKeys } from '../../utils/formatter'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    margin: '20px 0',\n    flexDirection: 'row'\n  },\n  fieldset: {\n    display: 'flex',\n    width: '100%'\n  },\n  label: {\n    fontWeight: 'bold',\n    fontSize: '18px'\n  },\n  options: {\n    width: '40%',\n    margin: 0\n  }\n}));\n\nexport default function CheckboxesGroup({ value, register, name, label, options, error }) {\n  const classes = useStyles()\n  \n  const listValues = value && typeof value !== 'undefined' ? value : [] \n  const isArrayObj = parseInt(Object.keys(listValues)[0], 10) !== 0\n  const valueList = !isArrayObj ?\n    listValues :\n    getKeys(listValues).split(', ')\n  \n  const [state, setState] = React.useState(valueList)\n\n  const handleChange = key => {\n    const newState = state.includes(key) ?\n      state.filter(item => item !== key) :\n      [...state, key]\n    setState(newState)\n  }\n\n  return (\n      <FormControl component=\"fieldset\" className={classes.root}>\n        <FormLabel component=\"legend\" className={classes.label}>{label}</FormLabel>\n        <FormGroup className={classes.root}>\n          {\n            options.sort().map((opt, index) =>(\n              <FormControlLabel\n                key={index}\n                className={classes.options}\n                control={<Checkbox \n                  inputRef={register}\n                  color=\"primary\"\n                  name={`${name}[${opt}]`}\n                  checked={state.includes(opt)} \n                  onChange={() => handleChange(opt)} \n                />}\n                label={opt}\n              />\n            ))\n          }\n        </FormGroup>\n        {error && <FormHelperText error>{error}</FormHelperText>}\n      </FormControl>\n  );\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledLabel = styled.label`\n  color: #000;\n  font-weight: 600;\n`\n\nconst Label = ({ children }) => <StyledLabel className=\"label\">{children}</StyledLabel>\n\nexport default Label","import React from \"react\"\nimport PropTypes from 'prop-types'\nimport Label from './Label'\nimport Typography from '@material-ui/core/Typography'\n\nconst Select = (\n  {\n    label,\n    error,\n    name,\n    firstValue,\n    children,\n    register,\n    isLoading = false,\n  }) => (\n    <div className=\"field\">\n      <Typography color=\"primary\" variant=\"h6\">{label}</Typography>\n      <div className=\"control\">\n        <div className={`select ${error ? \"is-focused is-danger\" : \"\"} ${isLoading ? \"is-loading\" : \"\"}`}>\n          <select name={name} ref={register}>\n            <option value=\"\">{firstValue}</option>\n            {children}\n          </select>\n        </div>\n        {error && <p className=\"help is-danger\">{error}</p>}\n      </div>\n    </div>\n  )\n\nSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  firstValue: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n  register: PropTypes.func.isRequired\n}\n\nexport default Select\n","import styled from \"styled-components\";\n\nexport const StyledChips = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px 0;\n  .chip-group {\n    margin-top: 10px;\n  }\n`","import React, { useState } from 'react';\nimport { StyledChips } from './style';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Chip from '@material-ui/core/Chip'\n\nconst ChipOptions = ({ register, name, label, error, value }) => {\n  const listValues = value || []\n  const [list, onAddTerm] = useState(listValues)\n  const [txtValue, addValue] = useState('')\n\n  \n  const handleAddTerm = (term) => {\n    if(!term) return false;\n\n    const newList = list.includes(term) ?\n      list.filter(item => item !== term) :\n      [...list, term]\n      onAddTerm(newList)\n      addValue('')\n  }\n\n  const handleEnter = (e, term) => {\n    if(e === 'Enter')\n      handleAddTerm(term)\n  }\n\n  return (\n    <StyledChips>\n      <input\n        type=\"hidden\"\n        name={name}\n        value={list}\n        ref={register}\n      />\n      <FormControl>\n          <InputLabel htmlFor=\"outlined-adornment-password\">{label}</InputLabel>\n          <FilledInput\n            id=\"outlined-adornment-password\"\n            type='text'\n            color=\"primary\"\n            value={txtValue}\n            error={error}\n            onChange={(e) => addValue(e.target.value)}\n            onBlur={(e) => addValue(e.target.value)}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={() => handleAddTerm(txtValue)}\n                >\n                  <AddCircleIcon color=\"primary\" />\n                </IconButton>\n              </InputAdornment>\n            }\n            labelWidth={70}\n          />\n          {error && <FormHelperText error>{error}</FormHelperText>}\n        </FormControl>\n      <div className=\"chip-group\">\n        { list &&\n          list.map(item => \n          <Chip \n            label={item}\n            onDelete={() => handleAddTerm(item)} \n            color=\"primary\" \n            variant=\"outlined\" \n          />)\n        }\n      </div>\n    </StyledChips>\n  )\n}\n\nexport default ChipOptions","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function SwitchLabels({ value, name, label, register, onChange, error }) {\n  const hasValue = value || false\n  const [state, setState] = React.useState(hasValue);\n\n  const handleChange = event => {\n    setState(event.target.checked);\n    onChange && onChange(event)\n  };\n  \n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Checkbox\n            inputRef={register}\n            name={name}\n            checked={state}\n            onChange={handleChange}\n            color=\"primary\"\n          />\n        }\n        label={label}\n      />\n      {error && <FormHelperText error>{error}</FormHelperText>}\n    </FormGroup>\n  );\n}","import React, { useState, useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport Typography from '@material-ui/core/Typography'\nimport uuid from 'uuid'\n\nimport Flexbox from '../../components/Flexbox'\nimport Button from '../../comps/Button'\nimport Checkbox from '../../comps/Checkbox'\n// import Textarea from '../../components/Textarea'\nimport Select from '../../components/Select'\n// import InputText from '../../components/InputText'\nimport { Error } from '../../components/Status'\n\nimport TextField from '@material-ui/core/TextField';\nimport ChipOptions from '../../comps/ChipOptions'\nimport Switch from '../../comps/Switch'\n\nimport states from '../../assets/states.json'\nimport {\n  segment,\n  actions,\n  functions,\n  identitySegments,\n  cnpj_type\n} from './dicioFields'\nimport { formatCheckboxFields } from '../../utils/service'\nimport { parseDate } from '../../utils/formatter'\n// import { dateToString, parseDate, normalizeArrayData } from '../../utils/formatter'\nimport { Form, Background, WrapButton, Title } from './styles'\n\nconst Enterprise = () => {\n  const { register, handleSubmit, errors, setValue } = useForm()\n\n  const registerCompany = useStoreActions(actions => actions.register.registerCompany)\n  const registerError = useStoreState(state => state.register.error)\n  const [isLoading, setLoader] = useState(false)\n\n  const onSubmit = (data) => {\n    const formatted = {\n      ...data,\n      foundation_date: parseDate(data.foundation_date),\n      cnpj_type: data.cnpjType,\n      apan_associate: data.apanAssociate,\n      identity_segments: formatCheckboxFields(data.identity_segments),\n      other_states: formatCheckboxFields(data.other_states),\n      diversity_functions: formatCheckboxFields(data.diversity_functions),\n      business_segments: formatCheckboxFields(data.business_segments),\n      business_fields: formatCheckboxFields(data.business_fields),\n      identity_content: data.identityContent,\n      type: 'enterprise'\n    }\n    // console.log(formatted)\n    registerCompany(formatted)\n  }\n\n  const programIsLoading = () => {\n    setLoader(true)\n    setTimeout(() => { setLoader(false) }, 2000);\n  }\n\n  const handleRadio = (field, selectedOption) => setValue(field, (selectedOption.toLowerCase() === 'true'))\n\n  useEffect(() => {\n    register({ name: 'identityContent' });\n    register({ name: 'apanAssociate' });\n  }, [register]);\n\n  // TODO: req hasNoRegister p/ validar se o usuário tem algum registro como profissional ou empresa. Se sim, redireciona para o dashboard, se não, mantém na página.\n  return (\n    <Background>\n      <Flexbox justify=\"center\">\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Typography variant=\"h4\" component=\"h2\">Formulário de Cadastro da Empresa</Typography>\n\n        <TextField\n          label=\"Nome da Empresa\"\n          error={errors.name}\n          helperText={errors.name && errors.name.message}\n          fullWidth\n          name=\"enterprise_name\"\n          variant=\"filled\"\n          inputRef={register({\n            required: 'Esse campo é obrigatório',\n          })}\n        />\n\n        <TextField\n          name=\"foundation_date\"\n          label=\"Data de Fundação\"\n          type=\"date\"\n          fullWidth\n          variant=\"filled\"\n          error={errors.foundation_date && errors.foundation_date.message}\n          helperText={errors.foundation_date && errors.foundation_date.message}\n          inputRef={register({\n            required: 'Esse campo é obrigatório'\n          })}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        <ChipOptions\n          name=\"links\"\n          label=\"Links para site e redes sociais da empresa\"\n          error={errors.links && errors.links.message}\n          register={register({\n            required: 'Esse campo é obrigatório',\n            minLength: {\n              value: 10,\n              message: 'Insira pelo menos um link'\n            }\n          })}\n        />\n\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Apresentação da Empresa\"\n          multiline\n          rows=\"5\"\n          error={errors.presentation}\n          error={errors.presentation && errors.presentation.message}\n          fullWidth\n          name=\"presentation\"\n          variant=\"filled\"\n          inputRef={register({\n            required: 'Esse campo é obrigatório',\n            minLength: {\n              value: 10,\n              message: 'Fale um pouco mais sobre sua empresa'\n            }\n          })}\n        />\n\n          <Select\n            label=\"Estado\"\n            error={errors.state && errors.state.message}\n            name=\"state\"\n            firstValue=\"Estado Sede\"\n            register={register}\n            onChange={programIsLoading}\n            isLoading={isLoading}\n          >\n            {states.map(item =>\n              <option value={item.id} key={item.id}>{item.name}</option>\n            )}\n          </Select>\n\n        <TextField\n          label=\"Cidade\"\n          error={errors.city}\n          helperText={errors.city && errors.city.message}\n          fullWidth\n          name=\"city\"\n          variant=\"filled\"\n          inputRef={register({\n            required: 'Esse campo é obrigatório',\n          })}\n        />\n\n          <Checkbox\n            label=\"Outros estados que a empresa tem atuação\"\n            register={register}\n            options={states.map(uf => uf.name)}\n            name=\"other_states\"\n          />\n\n          <Checkbox\n            label=\"Segmento de atuação\"\n            register={register}\n            options={segment}\n            name=\"business_segments\"\n          />\n          <Checkbox\n            label=\"Campos de atuação\"\n            register={register}\n            options={actions}\n            name=\"business_fields\"\n          />\n          <Checkbox\n            label=\"Funções que busca diversificar na empresa\"\n            register={register}\n            options={functions}\n            name=\"diversity_functions\"\n          />\n\n          <Select\n            label=\"Qual o tipo do seu CNPJ?\"\n            register={register}\n            firstValue=\"Tipo de CNPJ\"\n            name=\"cnpjType\"\n            error={errors.cnpjType && errors.cnpjType.message}\n          >\n            {cnpj_type.map(item =>\n              <option value={item} key={uuid()}>{item}</option>\n            )}\n          </Select>\n\n          <Switch\n            label=\"Sua empresa é vocacionada para conteúdo identitário?\"\n            name=\"identityContent\"\n            error={errors.identityContent && errors.identityContent.message}\n            onChange={e => handleRadio('identityContent', e.target.value)}\n          />\n\n          <Checkbox\n            label=\"Se sim, em qual segmento?\"\n            options={identitySegments}\n            name=\"identity_segments\"\n            register={register}\n          />\n\n          <Switch\n            label=\"A empresa é associado(a) da APAN?\"\n            name=\"apanAssociate\"\n            error={errors.apanAssociate && errors.apanAssociate.message}\n            onChange={e => handleRadio('apanAssociate', e.target.value)}\n          />\n\n          <Error msg={registerError && registerError.enterprise} />\n\n          <WrapButton>\n            <Button variant=\"contained\" type=\"submit\">\n              Enviar\n            </Button>\n          </WrapButton>\n\n        </Form>\n      </Flexbox>\n    </Background>\n  )\n}\n\nexport default Enterprise\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        localStorage.jwtToken ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={'/'}\n          />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 95%;\n  display: flex;\n  margin: 10px auto;\n  flex-direction: column;\n`;\n\nexport const Background = styled.div`\n  padding: 30px;\n  display: flex;\n  justify-content: center;\n  min-height: calc(100vh - 200px);\n`\n\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  font-weight: 600;\n  color: #000;\n  text-align: center;\n  margin-bottom: 20px;\n`\n\nexport const Label = styled.p`\n  font-size: 17px;\n`\nexport const Group = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Textarea = styled.p`\n  font-size: 17px;  \n  margin-left: 0.5vw;\n  color: #000;\n`;\n\nexport const Form = styled.form`\n  width: 50%;\n  margin: 25px;\n  padding: 30px;\n`\nexport const StyledForm = styled.form`\n  > div {\n    margin: 5px 0;\n  }\n`\n\nexport const WrapButton = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`","import React from 'react';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, headCells, onRequestSort, actions } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => {\n          const cols = Object.keys(headCell).indexOf('label')\n          const colName = Object.values(headCell)[cols]\n\n          return (\n            <TableCell\n              key={headCell.id}\n              align=\"center\"\n              padding='default'\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {colName}\n              </TableSortLabel>\n            </TableCell>\n          )}\n        )}\n        {\n          actions && (\n            <TableCell\n              align=\"center\"\n              padding='default'\n            >\n              <TableSortLabel></TableSortLabel>\n            </TableCell>\n          )\n        }\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = ({ title }) => {\n  const classes = useToolbarStyles();\n  return (\n    <Toolbar\n      className={classes.root}\n    >\n      <Typography\n        className={classes.title}\n        variant=\"h6\"\n        component=\"h2\"\n        id=\"tableTitle\"\n      >\n        {title}\n      </Typography>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    margin: '10px auto',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n    backgroundColor: '#f7cc94',\n  },\n  table: {\n    minWidth: 750,\n  },\n}));\n\nexport default function EnhancedTable({ headCells, list, title, actions }) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name_enterprise');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, list.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar title={title} color=\"secondary\"  />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              headCells={headCells}\n              onRequestSort={handleRequestSort}\n              rowCount={list.length}\n              actions={actions}\n            />\n\n            <TableBody>\n              {stableSort(list, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const hc = headCells.map(nameCell => ({\n                    cell: nameCell.id\n                  }))\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={`${row[hc[0].cell]}-${index}`}\n                    >\n                      {\n                        hc.map(name => {\n                          let c = '-';\n                          const s = name.cell.split('.');\n\n                          if(s.length === 1) c = row[s[0]];\n                          else c = row[s[0]][s[1]];\n\n                          return (\n                            <TableCell padding=\"default\" key={name.cell}>\n                              {c}\n                            </TableCell>\n                          )\n                        })\n                      }\n                      {\n                        actions && (\n                          <TableCell align=\"right\">\n                            {actions.map(action => {\n                              return (\n                                <Tooltip title={action.tooltip} key={action.action}>\n                                  {action.type === 'link' ?\n                                  <Link to={`${action.action}${row.id}`}>\n                                    <IconButton aria-label=\"delete\">{action.btn}</IconButton>\n                                  </Link> :\n                                  <IconButton aria-label=\"delete\">{action.btn}</IconButton>}\n\n                                </Tooltip>\n                              )\n                            })}\n                          </TableCell>\n                        )\n                      }\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          component=\"div\"\n          count={list.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\"\nimport { useStoreState, useStoreActions } from 'easy-peasy'\nimport Alert from '@material-ui/lab/Alert'\n\nimport { Container, Group, Background } from './style'\nimport { IfElse } from '../../components/If'\nimport Tables from '../../comps/Tables'\n\nconst headCells = [\n  { id: 'enterprise_name', numeric: false, disablePadding: true, label: 'Empresa' },\n  { id: 'title', numeric: false, disablePadding: false, label: 'Título' },\n  { id: 'function', numeric: false, disablePadding: false, label: 'Funções' },\n  { id: 'requirements', numeric: false, disablePadding: false, label: 'Requisitos' },\n  { id: 'location', numeric: false, disablePadding: false, label: 'Endereço' },\n  { id: 'cache', numeric: true, disablePadding: false, label: 'Cachê' },\n  { id: 'total_period', numeric: true, disablePadding: false, label: 'Período' }\n];\n\nconst VacancyList = ({ match }) => {\n  const vacancies = useStoreState(state => state.vacancy.vacancies)\n  const getAllVacancies = useStoreActions(actions => actions.vacancy.getAllVacancies)\n\n  useEffect(() => {\n    const id = match.params && match.params.id\n    getAllVacancies(id)\n  }, [getAllVacancies, match.params])\n  return (\n    <Background>\n      <Container>\n        <Group>\n          <IfElse\n            condition={typeof vacancies !== 'undefined' && vacancies.length > 0}\n            True={\n              <Tables \n                title=\"Vagas\"\n                headCells={headCells}\n                list={vacancies} \n              />\n            }\n            False={\n              <Alert severity=\"warning\">Não há vagas cadastradas</Alert>\n            }\n          />\n        </Group>\n      </Container>\n    </Background>\n  )\n}\n\nexport default VacancyList\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nconst FormText = ({ name, error, value, register, label, rows, type, onChange }) => (\n  <TextField\n    name={name}\n    type={type}\n    fullWidth\n    onChange={onChange}\n    multiline={rows}\n    rows={rows}\n    defaultValue={value}\n    error={error}\n    helperText={error}\n    inputRef={register}\n    label={label}\n    variant=\"filled\"\n  />\n)\n\nexport default FormText","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Title from '../Title'\nimport Text from '../Text'\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\n\nconst useStyles = makeStyles(theme => {\n  return ({\n    root: {\n      minWidth: 275,\n      minHeight: 232,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      background: theme.palette.primary.light,\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n      color: theme.palette.primary.contrastText\n    },\n  })\n});\nconst StyledText = styled.div`\ndisplay: block;\n  display: -webkit-box;\n  max-width: 100%;\n  margin: 0 auto;\n  font-size: 14px;\n  line-height: 1;\n  -webkit-line-clamp: 4;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nfunction CardVacancy({ id, jobTitle, enterpriseName, jobDescription, location, period, money, func}) {\n  const classes = useStyles();\n  const applyJob = useStoreActions(actions => actions.professional.applyJob)\n\n  const user = useStoreState(state => state.auth.auth.user)\n\n  const onApply = (id)=>{\n    console.log(id)\n    console.log(user)\n\n    applyJob({id, user_id:user.id})\n  };\n\n  return (\n    <Grid item xs={12} md={4}>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent >\n          <Text className={classes.title} color=\"textSecondary\" gutterBottom>\n            {enterpriseName}\n          </Text>\n          <Title color=\"secondary\" size=\"sm\">\n            {jobTitle} - {func}\n          </Title>\n          <Text className={classes.pos} color=\"textSecondary\">\n            {location}\n          </Text>\n          <Text className={classes.pos} color=\"textSecondary\">\n            {period}\n          </Text>\n          <StyledText>\n            <Text color=\"textPrimary\">\n              {jobDescription}\n            </Text>\n          </StyledText>\n          <Title color=\"secondary\" size=\"sm\">\n            {money}\n          </Title>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" onClick={()=>{onApply(id)}}>Candidate-se</Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n}\n\nexport default CardVacancy\n","import React, {useEffect, useState} from \"react\"\nimport {useStoreState, useStoreActions} from 'easy-peasy'\nimport {Link} from 'react-router-dom'\nimport Alert from '@material-ui/lab/Alert'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nimport Title from '../../comps/Title'\nimport Button from '../../comps/Button'\nimport FormText from '../../comps/FormText'\nimport CardVacancy from '../../comps/CardVacancy'\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete/Autocomplete\";\nimport {color as selfDeclaration, functions, gender} from \"../Signup/dicioFields\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport states from \"../../assets/states\";\nimport Switch from \"../../comps/Switch\";\nimport {useForm} from \"react-hook-form\";\n\nconst AllVacancies = () => {\n    const {\n        register,\n        handleSubmit,\n        errors,\n        setValue\n    } = useForm()\n\n    const [dados, setDados] = useState([])\n    const [selectedAreas, setAreas] = React.useState([]);\n    const [isLoading, setLoader] = useState({\n        city: false,\n        submit: false\n    })\n\n    const formatCheckboxFields = (field) => {\n        const identifiers = Object.keys(field)\n        return identifiers.filter((i) => field[i])\n    }\n\n    const handleChange = (e, value) => setAreas(value)\n\n    const onSubmit = (data) => {\n        const formatted = {\n            ...data,\n            expertise_areas: selectedAreas\n        }\n\n        console.log(formatted)\n\n        setDados(formatted)\n    }\n\n    const programIsLoading = () => {\n        setLoader({ ...isLoading, city: true })\n        setTimeout(() => { setLoader({ ...isLoading, city: false }) }, 2000);\n    }\n\n    const handleRadio = (field, selectedOption) => setValue(field, (selectedOption.toLowerCase() === 'true'))\n\n    // const vacancies = useStoreState(state => state.vacancy.vacancies)\n    const getAllJobs = useStoreActions(actions => actions.vacancy.getAllJobs)\n    const [jobList, setJobs] = useState([])\n\n    useEffect(() =>\n        {\n            (\n                async() =>\n                {\n                    try\n                    {\n                        const jobs = await getAllJobs(dados)\n                        setJobs(jobs.data)\n                    }\n                    catch(e)\n                    {\n                        console.log(e)\n                    }\n                }\n            )();\n        },\n        // [vacancies]\n        [dados]\n    )\n\n    return (\n        <Container>\n            <Title style={{margin: '30px 0'}}>Todas as vagas</Title>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <a href=\"/dashboard/profissional\">\n                        <Button\n                            variant=\"contained\"\n                        >Voltar</Button>\n                    </a>\n                </Grid>\n                <Grid item xs={12}>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <Grid container spacing={3}>\n                            <Grid container xs={1} alignItems=\"center\">\n                                <Typography>Filtrar por: </Typography>\n                            </Grid>\n\n                            <Grid item xs={6}>\n                                <Autocomplete\n                                    multiple\n                                    options={functions}\n                                    onChange={handleChange}\n                                    value={selectedAreas}\n                                    renderInput={(params) => (\n                                        <TextField\n                                            {...params}\n                                            name=\"expertise_areas\"\n                                            inputRef={register}\n                                            variant=\"filled\"\n                                            label=\"Áreas de atuação\"\n                                            placeholder=\"Adicione as áreas de atuação\"\n                                        />\n                                    )}\n                                />\n                            </Grid>\n\n                            <Grid item xs={4}>\n                                <FormControl fullWidth>\n                                    <InputLabel shrink htmlFor=\"select-multiple-native\">\n                                        Estado de residência\n                                    </InputLabel>\n                                    <Select\n                                        multiple\n                                        native\n                                        variant=\"filled\"\n                                        inputRef={register}\n                                        name=\"home_state\"\n                                    >\n                                        {states.map((name) => (\n                                                <option key={name.abbr} value={name.abbr}>\n                                                    {name.name}\n                                                </option>\n                                            )\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        <Grid container alignItems=\"center\" style={{margin: '10px 0'}} xs={12}>\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                styles={{display: 'block', width: '100%'}}\n                                isLoading={isLoading.submit}\n                            >\n                                Buscar\n                            </Button>\n                        </Grid>\n                    </form>\n                </Grid>\n            </Grid>\n            <Grid container spacing={2}>\n                {\n                    jobList.length > 0 ?\n                        (jobList.map(job => (\n                            <CardVacancy\n                                key={job._id}\n                                id={job._id}\n                                enterpriseName={job.enterprise_name || \"Confidencial\"}\n                                jobTitle={job.title}\n                                location={job.city + ' - ' + job.stateName}\n                                period={job.total_period}\n                                jobDescription={job.requirements}\n                                money={'Cachê: R$ ' + job.cache}\n                                func={job.function}\n                            />\n                        ))) :\n                        <Grid item xs={12}>\n                            <Alert variant=\"filled\" severity=\"warning\">Desculpe! Não encontramos vagas</Alert>\n                        </Grid>\n                }\n            </Grid>\n        </Container>\n    )\n}\n\nexport default AllVacancies\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  box-sizing: border-box;\n  height: inherit;\n  width: 95%;\n  display: block;\n  margin: 10px auto;\n`;\nexport const Title = styled.h1`\n  font-size: 22px;  \n  color:#fc9b44;\n  margin: 2vw 0;\n  text-align: center;\n`;\nexport const Group = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Background = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  justify-content: center;\n  min-height: calc(100vh - 200px);\n`\nexport const WrapperChoices = styled.div`\n  display: flex;\n  width: 50%;\n  justify-content: space-between;\n`\n\n/* STYLES ALLENTERPRISE */\n\nexport const WrapperSearchEnterprise = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const StyledButtonSearch = styled.button`\n  padding: 10px;\n  background-color: #6f0000;\n  color: #fc9b44;\n  `\n  export const GroupButton = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: flex-end;\n`;","import React, { useEffect } from \"react\"\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { useStoreState, useStoreActions } from 'easy-peasy'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ViewListIcon from '@material-ui/icons/ViewList'\nimport Alert from '@material-ui/lab/Alert'\nimport TextField from '@material-ui/core/TextField'\n\nimport Tables from '../../comps/Tables'\nimport { IfElse } from '../../components/If'\nimport { Container, Group, Background } from './style'\n// import { checkSegments } from '../../utils/formatter'\n\nconst headCells = [\n  { id: 'name_enterprise', numeric: false, disablePadding: true, label: 'Empresa' },\n  { id: 'name', numeric: false, disablePadding: false, label: 'Responsável' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'E-mail' },\n  { id: 'phone', numeric: false, disablePadding: false, label: 'Telefone' },\n  { id: 'segments', numeric: false, disablePadding: false, label: 'Segmento' }\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '50%',\n    '& > * + *': {\n      marginTop: theme.spacing(3),\n    },\n  },\n}));\n\nconst EnterprisesList = () => {\n  const enterprises = useStoreState(state => state.enterprise.enterprises)\n  const getAllEnterprises = useStoreActions(actions => actions.enterprise.getAllEnterpriseUsers)\n\n  useEffect(() => {\n    getAllEnterprises()\n  }, [getAllEnterprises])\n\n  const clearList = enterprises\n    .filter(ent => ent.enterprise_id)\n    .map(ent => ({\n      id: ent.enterprise_id,\n      name_enterprise: ent.name_enterprise,\n      name: ent.name,\n      email: ent.email,\n      phone: ent.phone,\n      segments: ent.business_segments\n    }))\n    const classes = useStyles();\n\n  return (\n    <Background className=\"container clearfix et_menu_container\">\n      <Container>\n        <div className={classes.root}>\n          <Autocomplete\n            multiple\n            fullWidth\n            id=\"tags-outlined\"\n            options={clearList}\n            getOptionLabel={option => option.name_enterprise}\n            filterSelectedOptions\n            renderInput={params => (\n              <TextField\n                {...params}\n                color=\"secondary\"\n                label=\"Pesquisar Empresas\"\n                placeholder=\"Digite sua pesquisa\"\n              />\n            )}\n          />\n        </div>\n        <Group>\n          <IfElse\n            condition={\n              typeof enterprises !== 'undefined' && enterprises.length > 0\n            }\n            True={\n              <Tables\n                title=\"Empresas\"\n                headCells={headCells}\n                list={clearList}\n                actions={[\n                  {\n                    action: '/listagem/vagas/',\n                    btn: <ViewListIcon />,\n                    type: 'link', // link or btn\n                    tooltip: 'Ver lista de vagas postadas'\n                  }\n                ]}\n              />\n            }\n            False={\n              <Alert severity=\"warning\">Não há empresas cadastradas</Alert>\n            }\n          />\n        </Group>\n      </Container>\n    </Background>\n  )\n}\n\nexport default EnterprisesList\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  box-sizing: border-box;\n  height: inherit;\n  width: 95%;\n  display: block;\n  margin: 10px auto;\n`;\nexport const Title = styled.h1`\n  font-size: 22px;  \n  color:#fc9b44;\n  margin: 2vw 0;\n  text-align: center;\n`;\nexport const Group = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Background = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  justify-content: center;\n  min-height: calc(100vh - 200px);\n`\nexport const WrapperChoices = styled.div`\n  display: flex;\n  width: 50%;\n  justify-content: space-between;\n`\n\n/* STYLES ALLENTERPRISE */\n\nexport const WrapperSearchEnterprise = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const StyledButtonSearch = styled.button`\n  padding: 10px;\n  background-color: #6f0000;\n  color: #fc9b44;\n  `\n  export const GroupButton = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: flex-end;\n`;","import React, { useEffect } from \"react\"\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { useStoreState, useStoreActions } from 'easy-peasy'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\nimport TextField from '@material-ui/core/TextField'\nimport states from '../../assets/states.json'\nimport Tables from '../../comps/Tables'\nimport { Container, Group, Background } from './style'\nimport { getState } from '../../utils/formatter'\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: false, label: 'Nome' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'E-mail' },\n  { id: 'gender', numeric: false, disablePadding: true, label: 'Gênero' },\n  { id: 'city', numeric: false, disablePadding: false, label: 'Cidade' }\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '50%',\n    '& > * + *': {\n      marginTop: theme.spacing(3),\n    },\n  },\n}));\n\nconst ProfessionalsList = () => {\n  const professionals = useStoreState(state => state.professional.professionals)\n  const getAllProfessionals = useStoreActions(actions => actions.professional.getAllProfessionals)\n  \n  useEffect(() => {\n    getAllProfessionals() \n  }, [getAllProfessionals])\n\n  const clearList = professionals\n    .filter(ent => ent._id)\n    .map(ent => ({\n      id: ent._id,\n      name: ent.name,\n      email: ent.email,\n      gender: ent.gender,\n      city: `${ent.city} - ${getState(ent.home_state, states)}`\n    }))\n    const classes = useStyles();\n    \n  return (\n    <Background className=\"container clearfix et_menu_container\">\n      <Container>\n        <div className={classes.root}>\n          <Autocomplete\n            multiple\n            fullWidth\n            options={clearList}\n            getOptionLabel={option => option.name_enterprise}\n            filterSelectedOptions\n            renderInput={params => (\n              <TextField\n                {...params}\n                color=\"secondary\"\n                label=\"Pesquisar Profissionais\"\n                placeholder=\"Digite sua pesquisa\"\n              />\n            )}\n          />\n        </div>\n        <Group>\n          {\n            typeof professionals !== 'undefined' && professionals.length > 0 ?\n            (\n              <Tables \n                title=\"Profissionais\"\n                headCells={headCells}\n                list={clearList} \n              />\n            ) :\n            (\n              <Alert severity=\"warning\">Não há profissionais cadastrados</Alert>\n            )\n          }\n        </Group>\n      </Container>\n    </Background>\n  )\n}\n\nexport default ProfessionalsList\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  > div {\n    margin: 5px 0;\n\n    .MuiGrid-grid-xs-6 {\n      padding-left: 0;\n    }\n  }\n`","import { Container } from \"@material-ui/core\";\nimport React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport Alert from '@material-ui/lab/Alert'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n\nimport {\n  color as selfDeclaration,\n  gender,\n} from '../Signup/dicioFields'\nimport Select from '../../comps/Select'\nimport Button from '../../comps/Button'\nimport loading from '../../assets/loading.svg'\nimport { StyledForm } from './style'\n\nconst EditUser = ({ match }) => {\n  const { register, handleSubmit, errors, getValues, setValue } = useForm()\n  const [isLoading, setLoading] = useState(true)\n  const [hasError, setError] = useState(false)\n  const getUserById = useStoreActions(actions => actions.user.getUserById)\n  const editUser = useStoreActions(actions => actions.user.editUser)\n  const user = useStoreState(state => state.user.user)\n  const error = useStoreState(state => state.user.error)\n\n  useEffect(() => {\n    Object.values(user).length === 0 && getUserById(match.params.user_id)\n    if (user && user.name) {\n      setLoading(false)\n    }\n\n  }, [user, getUserById])\n\n  const onSubmit = (data) => {\n    const formatted = {\n      id: user.id,\n      type: user.type,\n      ...data\n    }\n    editUser(formatted)\n  }\n\n  return (\n    <Container>\n    <Typography variant=\"h2\" style={{textAlign: 'center', fontWeight: 'bold'}}>Editar Usuário</Typography>\n\n    {isLoading ? <img src={loading} /> :\n        hasError ?\n        <Alert severity=\"warning\">Erro ao localizar o usuário</Alert> :\n        (<StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <TextField\n          name=\"name\"\n          fullWidth\n          error={errors.name && errors.name.message}\n          helperText={errors.name && errors.name.message}\n          inputRef={register({\n            required: 'Esse campo é obrigatório'\n          })}\n          defaultValue={user.name}\n          label=\"Nome do Usuário\"\n          variant=\"filled\"\n        />\n        <TextField\n          name=\"phone\"\n          fullWidth\n          defaultValue={user.phone}\n          error={errors.phone && errors.phone.message}\n          helperText={errors.phone && errors.phone.message}\n          inputRef={register({\n            required: 'Esse campo é obrigatório'\n          })}\n          label=\"Telefone\"\n          variant=\"filled\"\n        />\n        <TextField\n          name=\"email\"\n          fullWidth\n          defaultValue={user.email}\n          error={errors.email && errors.email.message}\n          helperText={errors.email && errors.email.message}\n          inputRef={register({\n            required: 'Esse campo é obrigatório'\n          })}\n          label=\"E-mail\"\n          variant=\"filled\"\n        />\n\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Select\n              name=\"self_declaration\"\n              value={user.self_declaration}\n              error={errors.self_declaration && errors.self_declaration.message}\n              helperText={errors.self_declaration && errors.self_declaration.message}\n              inputRef={register({\n                required: 'Esse campo é obrigatório'\n              })}\n              options={selfDeclaration}\n              register={register}\n              label=\"Auto-declaração\"\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Select\n              name=\"gender\"\n              options={gender}\n              value={user.gender}\n              error={errors.gender && errors.gender.message}\n              helperText={errors.gender && errors.gender.message}\n              inputRef={register({\n                required: 'Esse campo é obrigatório'\n              })}\n              register={register}\n              label=\"Gênero\"\n            />\n          </Grid>\n        </Grid>\n        <Button type=\"submit\" variant=\"contained\">Confirmar</Button>\n      </StyledForm>)\n      }\n    </Container>\n  )\n\n}\n\nexport default EditUser\n","import React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport Alert from '@material-ui/lab/Alert'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nimport states from '../../assets/states.json'\nimport cities from '../../assets/cities.json'\nimport {\n  formations,\n  separated_functions,\n  cnpj_type,\n  identitySegments\n} from '../Signup/dicioFields'\nimport { dateToString, parseDate, normalizeArrayData } from '../../utils/formatter'\nimport Checkbox from '../../comps/Checkbox'\nimport Switch from '../../comps/Switch'\nimport Select from '../../comps/Select'\nimport Button from '../../comps/Button'\nimport Title from '../../comps/Title'\nimport Text from '../../comps/Text'\nimport ChipOptions from '../../comps/ChipOptions'\nimport loading from '../../assets/loading.svg'\nimport { StyledForm } from './style'\n\nconst EditProfessional = ({ match }) => {\n  const { register, handleSubmit, errors } = useForm()\n  const [isLoading, setLoading] = useState(true)\n  const [hasError, setError] = useState(false)\n  const [numCols, setCols] = useState(3)\n  const [hasIdentity, toggleIdentity] = useState(false)\n  const getProfessionalById = useStoreActions(actions => actions.professional.getProfessionalById)\n  const editProfessional = useStoreActions(actions => actions.professional.editProfessional)\n \n  const professional = useStoreState(state => state.professional.professional)\n  const error = useStoreState(state => state.professional.error)\n  \n  useEffect(() => {\n    (!professional || Object.values(professional).length === 0) && getProfessionalById(match.params.id)\n    if (professional && Object.values(professional).length > 0) {\n      setLoading(false)\n    }\n\n    professional && professional.cnpj ? setCols(3) : setCols(4)\n    professional && professional.identity_content ? toggleIdentity(true) : toggleIdentity(false)\n  \n  }, [professional, getProfessionalById])\n\n  const onSubmit = (data) => {\n    const formatted = {\n      ...data,\n      id: professional.id,\n      birthday: parseDate(data.birthday),\n      expertise_areas: normalizeArrayData(data.expertise_areas),\n      identity_segments: normalizeArrayData(data.identity_segments),\n      type: 'professional'\n    }\n    console.log(formatted)\n\n    editProfessional(formatted)\n  }\n\n  const hideOptionCNPJ = check => {\n    check ? setCols(3) : setCols(4) \n  }      \n\n  const stateList = list => list.map(uf => ({value: uf.id, name: uf.name}))\n  \n  return (\n    <Container className=\"container\">\n      <Title align=\"center\" style={{margin: '30px 0'}}>Editar Profissional</Title>\n\n      {isLoading ? <img src={loading} /> :\n        hasError ? \n        <Alert severity=\"warning\">Erro ao localizar o usuário</Alert> :\n        (<StyledForm onSubmit={handleSubmit(onSubmit)} >\n        <TextField\n            name=\"birthday\"\n            label=\"Data de Nascimento\"\n            type=\"date\"\n            fullWidth\n            defaultValue={dateToString(professional.birthday)}\n            variant=\"filled\"\n            inputRef={register({\n              required: 'Esse campo é obrigatório'\n            })}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n        <Grid item xs={12}>\n          <Select \n            name=\"state\"\n            value={professional.state}\n            error={errors.state && errors.state.message}\n            helperText={errors.state && errors.state.message}\n            inputRef={register({\n              required: 'Esse campo é obrigatório'\n            })}\n            options={stateList(states)}\n            register={register}\n            label=\"Estado\"\n          />\n        </Grid>\n      \n        <TextField\n          name=\"address\"\n          fullWidth\n          defaultValue={professional.address}\n          error={errors.address && errors.address.message}\n          helperText={errors.address && errors.address.message}\n          inputRef={register({\n            required: 'Esse campo é obrigatório'\n          })}\n          label=\"Endereço\"\n          variant=\"filled\"\n        />\n        \n\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Select \n              name=\"home_state\"\n              value={professional.home_state}\n              error={errors.home_state && errors.home_state.message}\n              helperText={errors.home_state && errors.home_state.message}\n              inputRef={register({\n                required: 'Esse campo é obrigatório'\n              })}\n              options={stateList(states)}\n              register={register}\n              label=\"Estado de residência\"\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Autocomplete\n              fullWidth\n              freeSolo\n              defaultValue={professional.city}\n              options={cities.map(city => city.name).sort()}\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  name=\"city\"\n                  inputRef={register({\n                    required: 'Esse campo é obrigatório'\n                  })}\n                  color=\"primary\"\n                  label=\"Cidade\"\n                  variant=\"filled\"\n                  placeholder=\"Busque a cidade\"\n                  error={errors.city && errors.city.message}\n                  helperText={errors.city && errors.city.message}\n                />\n              )}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Select \n              name=\"education\"\n              value={professional.education}\n              error={errors.education && errors.education.message}\n              helperText={errors.education && errors.education.message}\n              inputRef={register({\n                required: 'Esse campo é obrigatório'\n              })}\n              options={formations}\n              register={register}\n              label=\"Formação\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              name=\"formation_institution\"\n              fullWidth\n              defaultValue={professional.formation_institution}\n              error={errors.formation_institution && errors.formation_institution.message}\n              helperText={errors.formation_institution && errors.formation_institution.message}\n              inputRef={register}\n              label=\"Instituição ou processo de formação\"\n              variant=\"filled\"\n            />\n          </Grid>\n        </Grid>\n\n          <Grid container spacing={2}>\n            <Grid item xs={numCols}>\n              <Switch\n                name=\"pcd\"\n                label=\"PcD\"\n                value={professional.pcd}\n                register={register}\n              />\n            </Grid>\n            <Grid item xs={numCols}>\n              <Switch\n                name=\"apan_associate\"\n                label=\"Associado APAN\"\n                value={professional.apan_associate}\n                register={register}\n              />\n            </Grid>\n            <Grid item xs={numCols}>\n              <Switch\n                name=\"cnpj\"\n                label=\"Possui CNPJ\"\n                error={errors.cnpj_type && errors.cnpj_type.message}\n                onChange={(e) => hideOptionCNPJ(e.target.checked)}\n                value={professional.cnpj}\n                register={register}\n              />\n            </Grid>\n            {numCols === 3 && \n              <Grid item xs={numCols}>\n                <Select \n                  name=\"cnpj_type\"\n                  value={professional.cnpj_type}\n                  error={errors.cnpj_type && errors.cnpj_type.message}\n                  helperText={errors.cnpj_type && errors.cnpj_type.message}\n                  options={cnpj_type}\n                  register={register}\n                  label=\"Tipo de CNPJ\"\n                />\n              </Grid>\n            }\n            \n          </Grid>\n          <Grid item xs={12}>\n            <ChipOptions \n              name=\"links\"\n              value={typeof professional.links === 'string' ?\n                professional.links.toLowerCase().split(',') :\n                professional.links\n              } \n              label=\"Links para site e redes sociais da empresa\"\n              error={errors.links && errors.links.message}\n              register={register({\n                required: 'Esse campo é obrigatório',\n                minLength: {\n                  value: 10,\n                  message: 'Insira pelo menos um link'\n                }\n              })}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Text>Áreas de atuação</Text>\n          {\n            separated_functions.map(check => (\n              <>\n              <Checkbox\n                name=\"expertise_areas\"\n                label={check.title}\n                options={check.list.sort()}\n                value={professional.expertise_areas}\n                register={register}\n              />\n              </>\n            ))\n          }\n          </Grid>\n          <Grid item xs={12}>\n          <Switch\n            name=\"identity_content\"\n            label=\"Empresa voltada para conteúdo identitário?\"\n            onChange={(e) => toggleIdentity(e.target.checked)}\n            value={professional.identity_content}\n            register={register}\n          />\n          </Grid>\n          {hasIdentity && <Grid item xs={12}>\n            <Checkbox\n              name=\"identity_segments\"\n              label=\"Segmentos identitários\"\n              options={identitySegments}\n              value={professional.identity_segments}\n              register={register}\n            />\n          </Grid>}\n          <Grid item xs={12}>\n          <TextField\n            name=\"bio\"\n            fullWidth\n            multiline\n            rows=\"5\"\n            defaultValue={professional.bio}\n            error={errors.bio && errors.bio.message}\n            helperText={errors.bio && errors.bio.message}\n            inputRef={register({\n              required: 'Esse campo é obrigatório'\n            })}\n            label=\"Bio\"\n            variant=\"filled\"\n          />\n        </Grid>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">Confirmar</Button>\n        </StyledForm>)\n      }\n    </Container>\n  )\n  \n}\n\nexport default EditProfessional\n","import React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport Alert from '@material-ui/lab/Alert'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n\nimport states from '../../assets/states.json'\nimport cities from '../../assets/cities.json'\nimport {\n  actions,\n  segment,\n  identitySegments,\n  cnpj_type,\n  functions\n} from '../Signup/dicioFields'\nimport { dateToString, parseDate, normalizeArrayData } from '../../utils/formatter'\nimport Checkbox from '../../comps/Checkbox'\nimport Switch from '../../comps/Switch'\nimport Select from '../../comps/Select'\nimport Button from '../../comps/Button'\nimport ChipOptions from '../../comps/ChipOptions'\nimport loading from '../../assets/loading.svg'\nimport { StyledForm } from './style'\n\nconst EditEnterprise = ({ match }) => {\n  const { register, handleSubmit, errors } = useForm()\n  const [isLoading, setLoading] = useState(true)\n  const [hasError, setError] = useState(false)\n  const [citiesFromStates, setCities] = useState([])\n  const [hasIdentity, toggleIdentity] = useState(false)\n  const getEnterpriseById = useStoreActions(actions => actions.enterprise.getEnterpriseById)\n  const editEnterprise = useStoreActions(actions => actions.enterprise.editEnterprise)\n  \n  const enterprise = useStoreState(state => state.enterprise.enterprises)\n  const [filteredStates, setStates] = useState(states.map(uf => uf.name))\n  const error = useStoreState(state => state.enterprise.error)\n\n  \n  useEffect(() => {\n    (!enterprise || Object.values(enterprise).length === 0) && getEnterpriseById(match.params.id)\n    if (enterprise && Object.values(enterprise).length > 0) {\n      setLoading(false)\n    }\n\n    enterprise && enterprise.identity_content ? toggleIdentity(true) : toggleIdentity(false)\n  \n  }, [enterprise, getEnterpriseById])\n\n  \n  const onSubmit = (data) => {\n    const formatted = {\n      ...data,\n      type: 'enterprise',\n      id: enterprise.id,\n      links: data.links.split(','),\n      foundation_date: parseDate(data.foundation_date),\n      other_states: normalizeArrayData(data.other_states),\n      business_segments: normalizeArrayData(data.business_segments),\n      business_fields: normalizeArrayData(data.business_fields),\n      diversity_functions: normalizeArrayData(data.diversity_functions),\n      identity_segments: normalizeArrayData(data.identity_segments)\n    }\n    // console.log('data =>', formatted)\n    editEnterprise(formatted)\n  }\n\n  \n  \n  const handleCities = state => {\n    const filteredCities = cities.filter(city => city.state_id == state)\n    const filteredStates = states.filter(uf => uf.id != state).map(uf => uf.name)\n    setCities(filteredCities)\n    setStates(filteredStates)\n  }\n\n  const stateList = list => list.map(uf => ({value: uf.id, name: uf.name}))\n\n  return (\n    <section className=\"container\">\n    <Typography variant=\"h2\" style={{textAlign: 'center', fontWeight: 'bold'}}>Editar Empresa</Typography>\n\n     {isLoading ? <img src={loading} /> :\n      hasError ? \n      <Alert severity=\"warning\">Erro ao localizar o usuário</Alert> :\n      (<StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <TextField\n        name=\"enterprise_name\"\n        fullWidth\n        defaultValue={enterprise.enterprise_name}\n        error={errors.enterprise_name && errors.enterprise_name.message}\n        helperText={errors.enterprise_name && errors.enterprise_name.message}\n        inputRef={register({\n          required: 'Esse campo é obrigatório'\n        })}\n        label=\"Nome da Empresa\"\n        variant=\"filled\"\n      />\n\n      <TextField\n          name=\"foundation_date\"\n          label=\"Data de Fundação\"\n          type=\"date\"\n          fullWidth\n          defaultValue={dateToString(enterprise.foundation_date)}\n          variant=\"filled\"\n          error={errors.foundation_date && errors.foundation_date.message}\n          helperText={errors.foundation_date && errors.foundation_date.message}\n          inputRef={register({\n            required: 'Esse campo é obrigatório'\n          })}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n    \n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Select \n            name=\"state\"\n            value={enterprise.state}\n            error={errors.state && errors.state.message}\n            helperText={errors.state && errors.state.message}\n            onChange={(e) => handleCities(e)}\n            options={stateList(states)}\n            register={register({\n              required: 'Esse campo é obrigatório'\n            })}\n            label=\"Estado\"\n          />\n        </Grid>\n\n        <Grid item xs={6}>\n          <Autocomplete\n            fullWidth\n            freeSolo\n            disabled={citiesFromStates.length === 0}\n            defaultValue={enterprise.city}\n            options={citiesFromStates.map(city => city.name).sort()}\n            renderInput={params => (\n              <TextField\n                {...params}\n                name=\"city\"\n                inputRef={register({\n                  required: 'Esse campo é obrigatório'\n                })}\n                color=\"primary\"\n                label=\"Cidade\"\n                variant=\"filled\"\n                placeholder=\"Busque a cidade\"\n                error={errors.city && errors.city.message}\n                helperText={errors.city && errors.city.message}\n              />\n            )}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Checkbox\n          name=\"other_states\"\n          label=\"Outros estados onde a empresa tem atuação\"\n          options={filteredStates}\n          error={errors.other_states && errors.other_states.message}\n          value={enterprise.other_states && enterprise.other_states[0]}\n          register={register}\n        />\n      </Grid>\n\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Switch\n            name=\"apan_associate\"\n            label=\"Associado APAN\"\n            value={enterprise.apan_associate}\n            register={register}\n          />\n        </Grid>\n          <Grid item xs={6}>\n            <Select \n              name=\"cnpj_type\"\n              value={enterprise.cnpj_type}\n              error={errors.cnpj_type && errors.cnpj_type.message}\n              helperText={errors.cnpj_type && errors.cnpj_type.message}\n              options={cnpj_type}\n              register={register({\n                required: 'Esse campo é obrigatório'\n              })}\n              label=\"Tipo de CNPJ\"\n            />\n          </Grid>          \n      </Grid>\n      \n      <Grid item xs={12}>\n        <Checkbox\n          value={enterprise.busines_segments && enterprise.busines_segments}\n          label=\"Segmento de atuação\"\n          register={register}\n          options={segment}\n          name=\"business_segments\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Checkbox\n          label=\"Campos de atuação\"\n          register={register}\n          options={actions}\n          name=\"business_fields\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Checkbox\n          label=\"Funções que busca diversificar na empresa\"\n          value={enterprise.diversity_functions && enterprise.diversity_functions}\n          register={register}\n          options={functions}\n          name=\"diversity_functions\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Switch\n          name=\"identity_content\"\n          label=\"Empresa voltada para conteúdo identitário?\"\n          onChange={(e) => toggleIdentity(e.target.checked)}\n          value={enterprise.identity_content}\n          register={register}\n        />\n      </Grid>\n      {hasIdentity && <Grid item xs={12}>\n        <Checkbox\n          name=\"identity_segments\"\n          label=\"Segmentos identitários\"\n          options={identitySegments}\n          value={enterprise.identity_segments && enterprise.identity_segments}\n          register={register}\n        />\n      </Grid>} \n      \n      <Grid item xs={12}>\n        <ChipOptions \n          name=\"links\"\n          value={typeof enterprise.links === 'string' ?\n            enterprise.links.toLowerCase().split(',') :\n            enterprise.links\n          } \n          label=\"Links para site e redes sociais da empresa\"\n          error={errors.links && errors.links.message}\n          register={register({\n            required: 'Esse campo é obrigatório',\n            minLength: {\n              value: 10,\n              message: 'Insira pelo menos um link'\n            }\n          })}\n        />\n      </Grid>\n        <Grid item xs={12}>\n        <TextField\n          name=\"presentation\"\n          fullWidth\n          multiline\n          rows=\"5\"\n          defaultValue={enterprise.presentation}\n          error={errors.presentation && errors.presentation.message}\n          helperText={errors.presentation && errors.presentation.message}\n          inputRef={register({\n            required: 'Esse campo é obrigatório'\n          })}\n          label=\"Descrição da Empresa\"\n          variant=\"filled\"\n        />\n      </Grid> \n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Confirmar</Button>\n      </StyledForm>)\n    }\n  </section>\n  )\n  \n}\n\nexport default EditEnterprise","import React, {useEffect, useState} from 'react'\nimport {useForm} from 'react-hook-form'\nimport {useStoreActions, useStoreState} from 'easy-peasy'\nimport Typography from '@material-ui/core/Typography'\n\nimport Button from '../../comps/Button'\nimport Checkbox from '../../comps/Checkbox'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport Switch from '../../comps/Switch'\nimport Select from '../../comps/Select'\nimport ChipOptions from '../../comps/ChipOptions'\n\nimport states from '../../assets/states.json'\nimport cities from '../../assets/cities.json'\n\nimport {\n    cnpj_type,\n    formations,\n    identitySegments,\n    separated_functions\n} from './dicioFields'\nimport {formatCheckboxFields} from '../../utils/service'\nimport {parseDate, normalizeArrayData} from '../../utils/formatter'\n\nimport {Form, Background, Title} from './styles'\n\nconst Professionals = () => {\n    const {\n        register,\n        handleSubmit,\n        errors,\n        setValue\n    } = useForm()\n\n    const [numCols, setCols] = useState(4)\n    const [hasIdentity, toggleIdentity] = useState(false)\n    const [citiesFromStates, setCities] = useState([])\n    const registerUser = useStoreActions(actions => actions.register.registerProfessional)\n    const registerError = useStoreState(state => state.register.error)\n    const stateList = list => list.map(uf => ({value: uf.id, name: uf.name}))\n    const [filteredStates, setStates] = useState(states.map(uf => uf.name))\n\n    console.log(errors)\n    // console.log(register)\n    console.log('????????????????????')\n    console.log(separated_functions)\n\n    const hideOptionCNPJ = check => {\n        check ? setCols(3) : setCols(4)\n    }\n    const handleCities = state => {\n\n        const filteredCities = cities.filter(city => city.state_id == state)\n        const filteredStates = states.filter(uf => uf.id != state).map(uf => uf.name)\n        setCities(filteredCities)\n        setStates(filteredStates)\n    }\n    const onSubmit = (data) => {\n        const formatted = {\n            ...data,\n            birthday: parseDate(data.birthday),\n            expertise_areas: normalizeArrayData(data.expertise_areas),\n            identity_segments: normalizeArrayData(data.identity_segments),\n            type: 'professional'\n        }\n        // console.log('=>', formatted)\n        registerUser(formatted)\n    }\n\n    // TODO: req hasNoRegister p/ validar se o usuário tem algum registro como profissional ou empresa. Se sim, redireciona para o dashboard, se não, mantém na página.\n    return (\n        <Background className=\"container center\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            name=\"birthday\"\n                            label=\"Data de Nascimento\"\n                            type=\"date\"\n                            fullWidth\n                            variant=\"filled\"\n                            error={errors.birthday && errors.birthday.message}\n                            helperText={errors.birthday && errors.birthday.message}\n                            inputRef={register({\n                                required: 'Esse campo é obrigatório'\n                            })}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Select\n                            name=\"home_state\"\n                            error={errors.home_state && errors.home_state.message}\n                            onChange={(e) => handleCities(e)}\n                            options={stateList(states)}\n                            register={register({\n                                required: 'Esse campo é obrigatório'\n                            })}\n                            label=\"Estado de residência\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Autocomplete\n                            fullWidth\n                            freeSolo\n                            options={citiesFromStates.map(city => city.name).sort()}\n                            renderInput={params => (\n                                <TextField\n                                    {...params}\n                                    name=\"city\"\n                                    inputRef={register({\n                                        required: 'Esse campo é obrigatório'\n                                    })}\n                                    color=\"primary\"\n                                    label=\"Cidade de residência\"\n                                    variant=\"filled\"\n                                    placeholder=\"Busque a cidade\"\n                                    error={errors.city && errors.city.message}\n                                    helperText={errors.city && errors.city.message}\n                                />\n                            )}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            name=\"address\"\n                            fullWidth\n                            error={errors.address && errors.address.message}\n                            helperText={errors.address && errors.address.message}\n                            inputRef={register({\n                                required: 'Esse campo é obrigatório'\n                            })}\n                            label=\"Endereço de residência\"\n                            variant=\"filled\"\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Select\n                            name=\"state\"\n                            error={errors.home_state && errors.home_state.message}\n                            register={register({\n                                required: 'Esse campo é obrigatório'\n                            })}\n                            options={stateList(states)}\n                            label=\"Naturalidade\"\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Select\n                            name=\"education\"\n                            error={errors.education && errors.education.message}\n                            register={register({\n                                required: 'Esse campo é obrigatório'\n                            })}\n                            options={formations}\n                            label=\"Formação\"\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField\n                            name=\"formation_institution\"\n                            fullWidth\n                            error={errors.formation_institution && errors.formation_institution.message}\n                            helperText={errors.formation_institution && errors.formation_institution.message}\n                            inputRef={register}\n                            label=\"Instituição ou processo de formação\"\n                            variant=\"filled\"\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={2}>\n                    <Grid item xs={numCols}>\n                        <Switch\n                            name=\"pcd\"\n                            label=\"PcD\"\n                            register={register}\n                        />\n                    </Grid>\n                    <Grid item xs={numCols}>\n                        <Switch\n                            name=\"apan_associate\"\n                            label=\"Associado APAN\"\n                            register={register}\n                        />\n                    </Grid>\n                    <Grid item xs={numCols}>\n                        <Switch\n                            name=\"cnpj\"\n                            label=\"Possui CNPJ\"\n                            error={errors.cnpj_type && errors.cnpj_type.message}\n                            onChange={(e) => hideOptionCNPJ(e.target.checked)}\n                            register={register}\n                        />\n                    </Grid>\n                    {numCols === 3 &&\n                    <Grid item xs={numCols}>\n                        <Select\n                            name=\"cnpj_type\"\n                            error={errors.cnpj_type && errors.cnpj_type.message}\n                            helperText={errors.cnpj_type && errors.cnpj_type.message}\n                            options={cnpj_type}\n                            register={register}\n                            label=\"Tipo de CNPJ\"\n                        />\n                    </Grid>\n                    }\n\n                </Grid>\n                <Grid item xs={12}>\n                    <ChipOptions\n                        name=\"links\"\n                        label=\"Links para site e redes sociais da empresa\"\n                        error={errors.links && errors.links.message}\n                        register={register({\n                            required: 'Esse campo é obrigatório',\n                            minLength: {\n                                value: 10,\n                                message: 'Insira pelo menos um link'\n                            }\n                        })}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\">Áreas de atuação</Typography>\n                    {\n                        separated_functions.map(check => (\n                            <>\n                                <Checkbox\n                                    key={check.title}\n                                    name=\"expertise_areas\"\n                                    label={check.title}\n                                    error={errors.expertiseAreas && errors.expertiseAreas.message}\n                                    options={check.list.sort()}\n                                    // register={register({\n                                    //     required: 'Esse campo é obrigatório'\n                                    // })}\n                                />\n                            </>\n                        ))\n                    }\n                </Grid>\n                <Grid item xs={12}>\n                    <Switch\n                        name=\"identity_content\"\n                        label=\"Empresa voltada para conteúdo identitário?\"\n                        onChange={(e) => toggleIdentity(e.target.checked)}\n                        register={register}\n                    />\n                </Grid>\n                {hasIdentity && <Grid item xs={12}>\n                    <Checkbox\n                        name=\"identity_segments\"\n                        label=\"Segmentos identitários\"\n                        options={identitySegments}\n                        register={register({\n                            required: 'Esse campo é obrigatório'\n                        })}\n                    />\n                </Grid>}\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"bio\"\n                        fullWidth\n                        multiline\n                        rows=\"5\"\n                        error={errors.bio && errors.bio.message}\n                        helperText={errors.bio && errors.bio.message}\n                        inputRef={register({\n                            required: 'Esse campo é obrigatório'\n                        })}\n                        label=\"Bio\"\n                        variant=\"filled\"\n                    />\n                </Grid>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Confirmar</Button>\n            </form>\n        </Background>\n    )\n}\n\nexport default Professionals\n","import React, { useState } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SelectMaterial from '@material-ui/core/Select'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1)+ ' 0',\n  },\n}));\n\nconst FormSelect = ({ label, register, name, options, value, onChange, error, color }) => {\n  const [ opt, setOpt ] = useState(value)\n  const compColor = color || 'primary'\n  const classes = useStyles();\n  const handleChange = value => {\n    setOpt(value)\n    if(onChange)\n      onChange(value)\n  }\n  \n  return(\n    <FormControl  className={classes.margin} fullWidth>\n      <InputLabel htmlFor=\"self_declaration\">{label}</InputLabel>\n      <SelectMaterial\n        native\n        inputRef={register}\n        defaultValue={opt}\n        color={compColor}\n        variant=\"filled\"\n        onChange={(e) => handleChange(e.target.value)}\n        inputProps={{\n          name: name,\n        }}\n      >\n        <option value=\"\" />\n        {\n          options.map((option, index) => {\n            return option.value ?\n              <option key={index} value={option.value}>{option.name}</option> :\n              <option key={index} value={option}>{option}</option>\n          })\n        }\n      </SelectMaterial>\n      {error && <FormHelperText error>{error}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default FormSelect","import { Container } from \"@material-ui/core\";\nimport React, { useState } from \"react\"\nimport { useForm } from 'react-hook-form'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport Alert from '@material-ui/lab/Alert'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Select from '../../comps/FormSelect'\nimport states from '../../assets/states.json'\nimport cities from '../../assets/cities.json'\n\nimport {\n  functions,\n  hiringType,\n} from '../Signup/dicioFields'\nimport Button from '../../comps/Button'\nimport Checkbox from '../../comps/Checkbox'\nimport { Error, Success } from '../../components/Status'\nimport { parseDate, normalizeArrayData } from '../../utils/formatter'\nimport history from '../../history'\n\n\n\nconst Vacancy = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm()\n\n  const registerJob = useStoreActions(actions => actions.enterprise.registerJob)\n  const registerError = useStoreState(state => state.enterprise.error)\n  const [selectedDate, setSelectedDate] = React.useState({})\n  const [status, setStatus] = useState('')\n  const [citiesFromStates, setCities] = useState([])\n  const handleDateChange = (date) => {\n    setSelectedDate({...selectedDate, ...date});\n  };\n\n  const handleCities = state => {\n    const filteredCities = cities.filter(city => city.state_id == state)\n    setCities(filteredCities)\n  }\n\n  const stateList = list => list.map(uf => ({value: uf.id, name: uf.name}))\n\n  const onSubmit = data => {\n    const period = `${parseDate(selectedDate.start)}-${parseDate(selectedDate.end)}`\n\n    for(let s in states)\n    {\n      if(states[s].id === Number(data.state))data.stateName = states[s].name\n    }\n\n    const formatted = {\n      ...data,\n      hiring_type: normalizeArrayData(data.hiring_type),\n      total_period: period\n    }\n    registerJob(formatted)\n  }\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Typography variant=\"h2\" style={{textAlign: 'center', fontWeight: 'bold', margin: '20px 0'}}>\n          Cadastro de Vaga\n        </Typography>\n        <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            name=\"title\"\n            fullWidth\n            error={errors.title !== undefined}\n            helperText={errors.title && errors.title.message}\n            inputRef={register({\n              required: 'Esse campo é obrigatório'\n            })}\n            label=\"Nome da Vaga\"\n            variant=\"filled\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Autocomplete\n            fullWidth\n            options={functions.sort()}\n            renderInput={params => (\n              <TextField\n                {...params}\n                name=\"function\"\n                inputRef={register({\n                  required: 'Esse campo é obrigatório'\n                })}\n                color=\"secondary\"\n                label=\"Função\"\n                variant=\"filled\"\n                placeholder=\"Digite sua pesquisa\"\n                error={errors.function !== undefined}\n                helperText={errors.function && errors.function.message}\n              />\n            )}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name=\"requirements\"\n            fullWidth\n            multiline\n            rows=\"5\"\n            error={errors.requirements !== undefined}\n            helperText={errors.requirements && errors.requirements.message}\n            inputRef={register({\n              required: 'Esse campo é obrigatório'\n            })}\n            label=\"Requisitos\"\n            variant=\"filled\"\n          />\n        </Grid>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Select\n            name=\"state\"\n            error={errors.state !== undefined}\n            helperText={errors.state && errors.state.message}\n            onChange={(e) => handleCities(e)}\n            options={stateList(states)}\n            register={register({\n              required: 'Esse campo é obrigatório'\n            })}\n            label=\"Estado\"\n          />\n        </Grid>\n\n        <Grid item xs={6}>\n          <Autocomplete\n            fullWidth\n            freeSolo\n            disabled={citiesFromStates.length === 0}\n            options={citiesFromStates.map(city => city.name).sort()}\n            renderInput={params => (\n              <TextField\n                {...params}\n                name=\"city\"\n                inputRef={register({\n                  required: 'Esse campo é obrigatório'\n                })}\n                color=\"primary\"\n                label=\"Cidade\"\n                variant=\"filled\"\n                placeholder=\"Busque a cidade\"\n                error={errors.city !== undefined}\n                helperText={errors.city && errors.city.message}\n              />\n            )}\n          />\n        </Grid>\n      </Grid>\n        <Grid item xs={6}>\n          <TextField\n            name=\"start\"\n            onChange={(e) => handleDateChange({ [e.target.name]: e.target.value })}\n            label=\"Data Inicial\"\n            type=\"date\"\n            fullWidth\n            variant=\"filled\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            name=\"end\"\n            onChange={(e) => handleDateChange({ [e.target.name]: e.target.value })}\n            label=\"Data Final\"\n            type=\"date\"\n            fullWidth\n            variant=\"filled\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name=\"cache\"\n            type=\"number\"\n            fullWidth\n            error={errors.cache !== undefined}\n            helperText={errors.cache && errors.cache.message}\n            inputRef={register({\n              required: 'Esse campo é obrigatório'\n            })}\n            label=\"Cachê\"\n            variant=\"filled\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Checkbox\n            name=\"hiring_type\"\n            options={hiringType}\n            register={register}\n          />\n        </Grid>\n      </Grid>\n        <Success msg={status} />\n        <Error msg={registerError} />\n\n        <Button type=\"submit\" variant=\"contained\">\n          Enviar\n        </Button>\n      </form>\n    </Container>\n  )\n}\n\nexport default Vacancy;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst StyledButton = styled.button`\n  ${props => `min-width: ${props.minWidth || '120px'};`}\n  ${props => props.margin && props.margin.top && `margin-top: ${props.margin.top};`}\n  ${props => `margin-bottom: ${(props.margin && props.margin.bottom) || '.5rem'};`}\n  ${props => props.margin && props.margin.left && `margin-left: ${props.margin.left};`}\n  ${props => `margin-right: ${(props.margin && props.margin.right) || '10px'};`}\n  ${props => `color: ${props.color || '#fc9b44'};`}\n  ${props => `background: ${props.background || '#fc9b44'};`}\n  line-height: 1.5;\n  padding-bottom: calc(.5em - 1px);\n  padding-left: calc(.75em - 1px);\n  padding-right: calc(.75em - 1px);\n  padding-top: calc(.5em - 1px);\n  border-radius: 4px;\n  font-size: 1rem;\n  &:hover {\n    color: #fff;\n  }\n  border: none;\n  text-decoration: none;\n`\n\nconst Button = ({ type, onClick, children, disabled, styles, isLoading }) => (\n  <StyledButton\n    className={`button ${isLoading ? 'is-loading' : ''} ${styles}`}\n    disabled={disabled}\n    type={type}\n    onClick={onClick}\n  >\n    {children}\n  </StyledButton>\n)\n\nexport default Button\n\nconst { node, bool, string, shape, oneOfType, number } = PropTypes\n\nButton.propTypes = {\n  isLoading: bool,\n  /** Children nodes. */\n  children: node,\n  /** Disable button. */\n  disabled: bool,\n  /** Button type. */\n  type: string,\n  /** Button min-width. */\n  minWidth: string,\n  /** Button margin. */\n  margin: shape({\n    top: oneOfType([string, number]),\n    bottom: oneOfType([string, number]),\n    left: oneOfType([string, number]),\n    right: oneOfType([string, number])\n  }),\n}\n\nButton.defaultProps = {\n  isLoading: false,\n  type: 'button',\n  disabled: false,\n  style: 'is-rounded normal is-danger',\n  margin: {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Label from './Label'\n\nconst Textarea = ({ placeholder, label, rows, register, error, name }) => {\n  return (\n    <div className=\"field\">\n      <Label>{label}</Label>\n      <div className={`control ${error ? \"has-icons-right\" : \"\"}`}>\n        <textarea\n          className={`textarea ${error ? \"is-danger\" : \"\"}`}\n          placeholder={placeholder}\n          rows={rows}\n          ref={register}\n          name={name}\n        >\n        </textarea>\n        {error && (\n          <span className=\"icon is-right is-small\">\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        )}\n        {error &&\n          <p className=\"help is-danger\">\n            {error}\n          </p>\n        }\n      </div>\n    </div>\n  )\n}\n\nTextarea.propTypes = {\n  placeholder: PropTypes.string,\n  rows: PropTypes.number,\n  label: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  error: PropTypes.string\n}\n\nTextarea.defaultProps = {\n  rows: 5\n}\n\nexport default Textarea","import React from 'react'\nimport PropTypes from 'prop-types'\nimport uuid from 'uuid'\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\n\nconst mobile = '576px'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  @media(min-width: ${mobile}) {\n    justify-content: space-between;\n    flex-wrap: wrap;\n    flex-direction: row;\n  }\n`\nconst Label = styled.label`\n  display: flex;\n  margin-bottom: 10px;\n  color: #FFFF;\n  font-weight: 500;\n  @media(min-width: ${mobile}) {\n    width: 50%;\n  }\n`\nconst Checkbox = styled.input`\n  margin-right: 10px;\n`\n\nconst Checkboxes = ({ label, register, name, fields }) => (\n  <div className=\"field\">\n    <Typography color=\"primary\" variant=\"h6\">{label}</Typography>\n    <Wrapper>\n      {fields.map(item => {\n        const checkedItem = typeof item !== 'string' ? item.name : item\n        return (\n          <Label key={uuid()} className=\"control checkbox\">\n            <Checkbox\n              type=\"checkbox\"\n              name={`${name}[${checkedItem}]`}\n              ref={register}\n            />\n            <Typography color=\"primary\">{checkedItem}</Typography>\n          </Label>\n        )\n      })}\n    </Wrapper>\n  </div>\n)\n\nCheckboxes.propTypes = {\n  label: PropTypes.string,\n  register: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired\n}\n\nexport default Checkboxes","import React from 'react'\nimport uuid from 'uuid'\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\nimport Text from './Text'\n\nconst StyledRadio = styled.label`\n  display: flex;\n  align-items: center;\n  color: #FFFF;\n  font-weight: 500;\n`\n\n// const StyledDescription = styled.label`\n//   color: #fc9b44;\n//   font-weight: 500;\n// `\nconst Input = styled.input`\n  margin-right: 10px;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst InputLabel = styled(Text)`\n  text-transform: capitalize;\n`\n\nconst Radios = ({ label, error, onChange, name }) => (\n  <div className=\"field\">\n    <Typography color=\"primary\">{label}</Typography>\n    <Wrapper>\n      {['sim', 'não'].map(item => (\n        <StyledRadio className=\"radio\" key={uuid()}>\n          <Input\n            type=\"radio\"\n            className={`${error ? \"is-danger\" : \"\"}`}\n            onChange={onChange}\n            value={item === 'sim'}\n            name={name}\n\n          />\n          <Typography color=\"primary\">{item}</Typography>\n        </StyledRadio>\n      ))}\n    </Wrapper>\n    {error &&\n      <p className=\"help is-danger\">\n        {error}\n      </p>\n    }\n  </div>\n)\n\nexport default Radios\n","import styled from 'styled-components';\n\nexport const TitleSearch = styled.h1`\n  text-transform: uppercase;\n  color: #fc9b44;\n  text-align: center;\n  font-size: 40px;\n  margin: 2vh 0;\n   \n`\n\nexport const SubTitle = styled.h3`\n  text-transform: uppercase;\n  color: #fc9b44;\n  text-align: center;\n  font-size: 20px;\n  margin-bottom: 2vh;\n`\n\nexport const Container = styled.div`\n  box-sizing: border-box;\n  height: inherit;\n  width: 95%;\n  display: block;\n  margin: 10px auto;\n`;\n\nexport const Title = styled.h1`\n  font-size: 22px;\n  color: #FFFFFF;\n  margin: 2vh 0;\n`\n\nexport const Label = styled.p`\n  font-size: 17px;\n`\nexport const Group = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  margin: 0.4vw 0;\n  justify-content: space-between;\n  color: #fc9b44;\n`;\n\nexport const Textarea = styled.p`\n  font-size: 17px;  \n  margin-left: 0.5vw;\n`;\n\nexport const Background = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const WrapperResultSearch = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n\n  .chips-group {\n    display: flex;\n    > * {\n      margin: 5px;\n    }\n  }\n`;\n\nexport const SearchResultEnterprise = styled.div`\n  color: wheat;\n  @media(min-width: 576px) {\n    width: 500px;\n  }\n`;\n\nexport const Form = styled.form`\n  width: 50%;\n  padding: 20px;\n`\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  display: flex;\n  align-items: center;\n`\n\nexport const Text = styled.div`\n  font-size: 16px;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nexport const Link = styled.a`\n  margin-left: 1vh;\n  color: #FFFFFF;\n  text-decoration: underline;\n`\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CardEnterprise = (props) => {\n  return (\n  <Container>\n    <Card>\n    <Group>\n      <Name>{props.name}</Name>\n      <Destac>{props.email}</Destac>\n      <Textarea>{props.state}</Textarea>\n      <Textarea>{props.cnpj}</Textarea>\n      <Textarea>{props.apan_associate}</Textarea>\n      <Textarea>{props.business_segments}</Textarea>\n      <Textarea>{props.business_fields}</Textarea>\n      <Textarea>{props.diversity_functions}</Textarea>\n      <Bio>{props.presentation}</Bio>\n      <Destac>{props.links}</Destac>\n    </Group>\n    </Card>\n  </Container>\n  );\n};\n\nexport default CardEnterprise;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  box-shadow: 0 6px 20px 0 rgba(13, 51, 32, 0.1);\n  border: 1px solid transparent;\n  transition: border 300ms ease-in;\n  min-width: 100%;\n  min-height: 100%;\n  margin-top: 2vh;\n\n  &:hover {\n    border: 1px solid #fc9b44;\n  }\n`;\nexport const Card = styled.div`\n  padding: 20px;\n\n`;\nexport const Textarea = styled.p`\n  font-size: 16px;  \n`;\nexport const Label = styled.label`\n  font-size: 16px;\n  margin-right: 1vw;\n`;\nexport const Group = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0.4vw 0;\n`;\nexport const Name = styled.p`\n  color: #FFDEAD;\n  font-size: 28px;\n  margin-top: 1vh;\n`;\nexport const Destac = styled.p`\n  color: #fc9b44;\n  font-size: 16px;\n  margin-top: 1vh;\n`;\nexport const Bio = styled.p`\n  display: flex;\n  flex-wrap: wrap;\n  word-break: break-all;\n`;\n","import React, { useEffect, useState } from \"react\"\nimport { useStoreActions } from 'easy-peasy'\nimport {\n  Wrapper,\n  Group,\n  TitleSearch,\n  WrapperResultSearch,\n  SubTitle,\n  SearchResultEnterprise,\n  Link,\n  Text,\n} from './styles'\nimport CardEnterprise from './components/CardEnterprise'\n\nconst ResultSearchProfessionals = ({ data }) => {\n  const [enterprises, setEnterprise] = useState([])\n  const [notRegister, setNotRegister] = useState()\n  const getEnterpriseAll = useStoreActions(actions => actions.enterprise.getAll)\n\n  const list = []\n  Object.keys(data).forEach((item) => (\n    Array.isArray(data[item]) ?\n      data[item].map((arr) => {\n        list.push(arr)\n      }) :\n      data[item] !== undefined && data[item] !== \"\" &&\n      list.push(data[item])\n  ))\n\n  useEffect(() =>\n      {\n        (\n            async () => {\n              const enterpriseAll = await getEnterpriseAll()\n\n              if (!enterpriseAll.data) {\n                setNotRegister(\"Não existem empresas cadastradas ainda\")\n              } else {\n                let filter = enterpriseAll.data.filter((item) => {\n                  let itemFunctions = \"\"\n                  let dataFunctions = \"\"\n                  let itemSegments = \"\"\n                  let dataSegments = \"\"\n                  let itemFields = \"\"\n                  let dataFields = \"\"\n\n                  if (item.diversity_functions.length > 0) {\n                    item.diversity_functions.map((functions) => {\n                      itemFunctions = functions\n                    })\n                    if (data.diversity_functions.length > 0) {\n                      data.diversity_functions.map((functions) => {\n                        if (itemFunctions === functions) {\n                          dataFunctions = functions\n                        }\n                      })\n                    }\n                  }\n\n                  if (item.business_segments.length > 0) {\n                    item.business_segments.map((segments) => {\n                      itemSegments = segments\n                    })\n\n                    if (data.business_segments.length > 0) {\n                      data.business_segments.map((segments) => {\n                        if (itemSegments === segments) {\n                          dataSegments = segments\n                        }\n                      })\n                    }\n                  }\n                  if (item.business_fields.length > 0) {\n                    item.business_fields.map((fields) => {\n                      itemFields = fields\n                    })\n                    if (data.business_fields.length > 0) {\n                      data.business_fields.map((fields) => {\n                        if (itemFields === fields) {\n                          dataFields = fields\n                        }\n                      })\n                    }\n                  }\n\n                  return (\n                      itemFunctions === dataFunctions ||\n                      itemSegments === dataSegments ||\n                      itemFields === dataFields ||\n                      item.state === data.state)\n                })\n\n                setEnterprise(filter)\n              }\n            }\n        )();\n      },\n      []\n  )\n\n  return (\n    <WrapperResultSearch>\n      <Group>\n        <Link href=\"/busca/empresas\">Voltar</Link>\n      </Group>\n      <Wrapper>\n        <TitleSearch>Resultado de busca de Empresas</TitleSearch>\n        <SubTitle>Resultado de Busca para:</SubTitle>\n        <Text>{list.join(\", \")}</Text>\n        <SearchResultEnterprise>\n          {\n            notRegister ?\n              <p>{setNotRegister}</p>\n              :\n              enterprises.length > 0 ?\n                enterprises.map((enterprise) => (\n                  <CardEnterprise\n                    name={enterprise.name_enterprise}\n                    email={enterprise.user_email}\n                    state={enterprise.state}\n                    cnpj={enterprise.cnpj_type && `Tipo de CNPJ: ${enterprise.cnpj_type}`}\n                    apan_associate={enterprise.apan_associate ? \"Associado a APAN\" : \"Não associado a APAN\"}\n                    business_segments={\n                      enterprise.business_segments &&\n                      enterprise.business_segments.map((state, index) => (\n                        enterprise.business_segments.length === index + 1 ?\n                          `${state}` :\n                          `${state}, `\n                      ))\n                    }\n                    business_fields={\n                      enterprise.business_fields &&\n                      enterprise.business_fields.map((state, index) => (\n                        enterprise.business_fields.length === index + 1 ?\n                          `${state}` :\n                          `${state}, `\n                      ))\n                    }\n                    diversity_functions={\n                      enterprise.diversity_functions &&\n                      enterprise.diversity_functions.map((state, index) => (\n                        enterprise.diversity_functions.length === index + 1 ?\n                          `${state}` :\n                          `${state}, `\n                      ))\n                    }\n                    presentation={enterprise.presentation}\n                    links={enterprise.links}\n                  />\n                )) : <Text>Não achamos nenhuma empresa</Text>\n\n          }\n        </SearchResultEnterprise>\n\n      </Wrapper>\n    </WrapperResultSearch>\n  )\n}\n\nexport default ResultSearchProfessionals\n","import React, { useState, useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useStoreActions } from 'easy-peasy'\nimport uuid from 'uuid'\n\nimport { If } from '../../components/If'\nimport Flexbox from '../../components/Flexbox'\nimport Button from '../../components/Button'\nimport Textarea from '../../components/Textarea'\nimport Checkboxes from '../../components/Checkboxes'\nimport Radios from '../../components/Radios'\nimport Select from '../../components/Select'\n\nimport cities from '../../assets/cities.json'\nimport states from '../../assets/states.json'\nimport {\n  segment,\n  actions,\n  functions,\n  color,\n  identitySegments,\n  cnpj_type\n} from '../Signup/dicioFields'\n\nimport { TitleSearch } from './styles'\n\nimport { Form, Background } from '../Signup/styles'\nimport ResultSearchEnterprise from './ResultSearchEnterprise'\n\nconst Enterprise = () => {\n  const { register, handleSubmit, errors, getValues, setValue } = useForm()\n\n  const registerCompany = useStoreActions(actions => actions.user.registerCompany)\n  const [isLoading, setLoader] = useState(false)\n  const [form, setForm] = useState(true)\n  const [dados, setDados] = useState()\n\n  const formatCheckboxFields = (field) => {\n    const identifiers = Object.keys(field)\n    return identifiers.filter((i) => field[i])\n  }\n\n  const onSubmit = (data) => {\n    const formatted = {\n      state: data.state,\n      diversity_functions: formatCheckboxFields(data.diversityFunctions),\n      business_segments: formatCheckboxFields(data.businessSegments),\n      business_fields: formatCheckboxFields(data.businessFields),\n    }\n    setDados(formatted)\n    setForm(false)\n  }\n\n  const programIsLoading = () => {\n    setLoader(true)\n    setTimeout(() => { setLoader(false) }, 2000);\n  }\n\n  const handleRadio = (field, selectedOption) => setValue(field, (selectedOption.toLowerCase() === 'true'))\n\n  useEffect(() => {\n    register({ name: 'identityContent' });\n    register({ name: 'apanAssociate' });\n  }, [register]);\n\n  // TODO: req hasNoRegister p/ validar se o usuário tem algum registro como profissional ou empresa. Se sim, redireciona para o dashboard, se não, mantém na página.\n  return (\n    <>\n      {\n        form ?\n          <Background>\n            <Flexbox justify=\"center\">\n              <Form onSubmit={handleSubmit(onSubmit)}>\n\n                <TitleSearch>Busca de Empresas</TitleSearch>\n                <Checkboxes\n                  label=\"Segmento de atuação\"\n                  register={register}\n                  fields={segment}\n                  name=\"businessSegments\"\n                />\n                <Checkboxes\n                  label=\"Campos de atuação\"\n                  register={register}\n                  fields={actions}\n                  name=\"businessFields\"\n                />\n                <Checkboxes\n                  label=\"Funções que busca diversificar na empresa\"\n                  register={register}\n                  fields={functions}\n                  name=\"diversityFunctions\"\n                />\n\n                <Select\n                  label=\"Estado\"\n                  error={errors.state && errors.state.message}\n                  name=\"state\"\n                  firstValue=\"Estado Sede\"\n                  register={register}\n                  onChange={programIsLoading}\n                  isLoading={isLoading}\n                >\n                  {states.map(item =>\n                    <option value={item.name} key={item.id}>{item.name}</option>\n                  )}\n                </Select>\n\n                <Button type=\"submit\">\n                  Enviar\n          </Button>\n              </Form>\n            </Flexbox>\n          </Background>\n          :\n          <ResultSearchEnterprise data={dados} />\n      }\n    </>\n  )\n}\n\nexport default Enterprise","import React, {useEffect, useState} from \"react\"\nimport {useStoreActions, useStoreState} from 'easy-peasy'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Alert from '@material-ui/lab/Alert'\nimport Chip from '@material-ui/core/Chip'\nimport states from '../../assets/states.json'\nimport loading from '../../assets/loading.svg'\nimport LinkIcon from '@material-ui/icons/Link'\nimport IconButton from '@material-ui/core/IconButton';\nimport Loading from \"../../components/loading\";\nimport {Wrapper, Group, WrapperResultSearch, SubTitle, Text, Link} from './styles'\nimport Button from '../../comps/Button'\nimport Tables from '../../comps/Tables'\n\nconst LinkBtn = ({linkRef}) => (\n    <IconButton>\n        <a href={linkRef} target='_blank'>\n            <LinkIcon color=\"primary\"/>\n        </a>\n    </IconButton>)\n\nconst checkArray = (src, search) => {\n    const searchKeys = Object.keys(search)\n\n    console.log(src)\n}\n\nconst ResultSearchProfessionals = ({data}) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [notRegister, setNotRegister] = useState(\"\")\n    const [professionals, setProfessionals] = useState([])\n    const getProfessionalAll = useStoreActions(actions => actions.user.getProfessionalAll)\n    const getAllUsers = useStoreActions(actions => actions.user.getAllUsers)\n\n    useEffect(() =>\n        {\n            setIsLoading(true);\n            (\n                async() => {\n                    const professionalAll = await getProfessionalAll(data)\n\n                    if(professionalAll.data.length === 0)\n                    {\n                        setNotRegister(\"Não existem profissionais cadastrados ainda\")\n                    }\n                    setProfessionals(professionalAll.data)\n                    setIsLoading(false)\n                }\n            )();\n        },\n        [data]\n    )\n\n    const headCells = [\n        {id: 'user_id.name', numeric: false, disablePadding: true, label: 'Nome'},\n        {id: 'user_email', numeric: false, disablePadding: false, label: 'E-mail'},\n        {id: 'user_id.phone', numeric: false, disablePadding: false, label: 'Telefone'},\n        {id: 'cnpj', numeric: false, disablePadding: false, label: 'Possui CNPJ'},\n        {id: 'user_id.gender', numeric: false, disablePadding: false, label: 'Gênero'},\n        {id: 'pcd', numeric: false, disablePadding: false, label: 'PcD'},\n        {id: 'user_id.self_declaration', numeric: false, disablePadding: false, label: 'Auto declaração'},\n        {id: 'links', numeric: false, disablePadding: false, label: 'Links'},\n    ];\n    const dataNames = {\n        expertise_areas: 'Áreas de atuação',\n        self_declaration: 'Auto-declaração',\n        gender: 'Gênero',\n        home_state: 'Estado de residência',\n        pcd: 'PcD',\n        company_registry: 'Possui CNPJ',\n    }\n\n    console.log('filters', data)\n\n    if(isLoading) return <Loading/>;\n    if(professionals.length === 0) return <p>{notRegister}</p>;\n\n    return (\n        <Tables\n            title={`${professionals.length} profissiona${professionals.length > 1 ? 'is' : 'l'} \n          encontrado${professionals.length > 1 && 's'}`}\n            headCells={headCells}\n            list={professionals.map(p => ({\n                ...p,\n                cnpj: p.cnpj ? \"Sim\" : \"Não\",\n                pcd: p.pcd ? \"Sim\" : \"Não\",\n                links: <LinkBtn linkRef={p.links}/>\n            }))}\n        />\n    )\n}\n\nexport default ResultSearchProfessionals\n","import React, { useState, useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useStoreActions } from 'easy-peasy'\nimport { Link } from \"react-router-dom\"\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Grid from '@material-ui/core/Grid'\nimport uuid from 'uuid'\n\nimport Button from '../../comps/Button'\n\nimport Select from '@material-ui/core/Select'\nimport ChipOptions from '../../comps/ChipOptions'\nimport Switch from '../../comps/Switch'\nimport ResultSearchProfessionals from './ResultSearchProfessionals'\n\n\nimport states from '../../assets/states.json'\nimport {\n  functions,\n  color as selfDeclaration,\n  gender,\n} from '../Signup/dicioFields'\n\n\nconst SearchProfessionals = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue\n  } = useForm()\n\n  const [dados, setDados] = useState([])\n  const [showAdvanced, setShowAdvanced] = useState(false)\n  const [selectedAreas, setAreas] = React.useState([]);\n  const registerUser = useStoreActions(actions => actions.user.registerProfessional)\n  const [isLoading, setLoader] = useState({\n    city: false,\n    submit: false\n  })\n\n  const formatCheckboxFields = (field) => {\n    const identifiers = Object.keys(field)\n    return identifiers.filter((i) => field[i])\n  }\n\n  const handleChange = (e, value) => setAreas(value)\n\n  const onSubmit = (data) => {\n    const formatted = showAdvanced ? {\n      ...data,\n      expertise_areas: selectedAreas\n    } : {\n      expertise_areas: selectedAreas\n    }\n\n    console.log(formatted)\n\n    setDados(formatted)\n  }\n\n  const programIsLoading = () => {\n    setLoader({ ...isLoading, city: true })\n    setTimeout(() => { setLoader({ ...isLoading, city: false }) }, 2000);\n  }\n\n  const handleRadio = (field, selectedOption) => setValue(field, (selectedOption.toLowerCase() === 'true'))\n\n  // TODO: req hasNoRegister p/ validar se o usuário tem algum registro como profissional ou empresa. Se sim, redireciona para o dashboard, se não, mantém na página.\n\n  return (\n    <Container fixed>\n      <Typography\n        style={{margin: '30px 0', textAlign: 'center'}}\n        component=\"h2\"\n        variant=\"h4\">Busca de Profissionais</Typography>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={3}>\n            <Grid container xs={1}  alignItems=\"center\">\n              <Typography>Filtrar por: </Typography>\n            </Grid>\n\n            <Grid item xs={9}>\n              <Autocomplete\n                multiple\n                options={functions}\n                onChange={handleChange}\n                value={selectedAreas}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    name=\"expertise_areas\"\n                    inputRef={register}\n                    variant=\"filled\"\n                    label=\"Áreas de atuação\"\n                    placeholder=\"Adicione as áreas de atuação\"\n                  />\n                )}\n              />\n            </Grid>\n\n            <Grid container xs={2}  alignItems=\"center\" onClick={() => setShowAdvanced(!showAdvanced)}>\n              <Button>Busca Avançada</Button>\n            </Grid>\n            {\n              showAdvanced && (\n                <>\n                  <Grid item xs={4} md={2}>\n                    <FormControl fullWidth>\n                      <InputLabel shrink htmlFor=\"select-multiple-native\">\n                        Auto-Declaração\n                      </InputLabel>\n                      <Select\n                        multiple\n                        native\n                        variant=\"filled\"\n                        inputRef={register}\n                        name=\"self_declaration\"\n                      >\n                        {selfDeclaration.map((name) => (\n                          <option key={name} value={name} key={`self-${name}`}>\n                            {name}\n                          </option>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={4} md={2}>\n                    <FormControl fullWidth>\n                      <InputLabel shrink htmlFor=\"select-multiple-native\">\n                        Gênero\n                      </InputLabel>\n                      <Select\n                        multiple\n                        native\n                        variant=\"filled\"\n                        inputRef={register}\n                        name=\"gender\"\n                      >\n                        {gender.map((name) => (\n                          <option key={name} value={name} key={name}>\n                            {name}\n                          </option>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <FormControl fullWidth>\n                      <InputLabel shrink htmlFor=\"select-multiple-native\">\n                        Estado de residência\n                      </InputLabel>\n                      <Select\n                        multiple\n                        native\n                        variant=\"filled\"\n                        inputRef={register}\n                        name=\"home_state\"\n                      >\n                        {states.map((name) => (\n                              <option key={name.abbr} value={name.abbr}>\n                                {name.name}\n                              </option>\n                          )\n                        )}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={4} md={3}>\n                    <Switch\n                      name=\"pcd\"\n                      label=\"PcD (Pessoa com deficiência)\"\n                      register={register}\n                    />\n                    <Switch\n                      name=\"company_registry\"\n                      label=\"Possui CNPJ\"\n                      register={register}\n                    />\n                  </Grid>\n                </>\n              )\n            }\n          </Grid>\n          <Grid container alignItems=\"center\" style={{margin: '10px 0'}} xs={12}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              styles={{display: 'block', width: '100%'}}\n              isLoading={isLoading.submit}\n            >\n              Buscar\n            </Button>\n          </Grid>\n        </form>\n\n        {Object.keys(dados).length > 0 && <ResultSearchProfessionals data={dados} />}\n\n        <Link to=\"/dashboard/empresa\">\n          <Button variant=\"contained\">\n              Voltar\n          </Button>\n        </Link>\n    </Container>\n  )\n}\n\n\nexport default SearchProfessionals\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Title from '../Title'\nimport Text from '../Text'\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\n\nconst useStyles = makeStyles(theme => {\n  return ({\n    root: {\n      minWidth: 275,\n      minHeight: 232,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      background: theme.palette.primary.light,\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n      color: theme.palette.primary.contrastText\n    },\n  })\n});\nconst StyledText = styled.div`\ndisplay: block;\n  display: -webkit-box;\n  max-width: 100%;\n  margin: 0 auto;\n  font-size: 14px;\n  line-height: 1;\n  -webkit-line-clamp: 4;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nfunction CardMyVacancy({ id, jobTitle, enterpriseName, jobDescription, location, period, money, deleteFunc}) {\n  const classes = useStyles();\n\n  const user = useStoreState(state => state.auth.auth.user)\n\n  const onDelete = (id)=>{\n    deleteFunc(id)\n  };\n\n  return (\n    <Grid item xs={12} md={4}>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent >\n          <Text className={classes.title} color=\"textSecondary\" gutterBottom>\n            {enterpriseName}\n          </Text>\n          <Title color=\"secondary\" size=\"sm\">\n            {jobTitle}\n          </Title>\n          <Text className={classes.pos} color=\"textSecondary\">\n            {location}\n          </Text>\n          <Text className={classes.pos} color=\"textSecondary\">\n            {period}\n          </Text>\n          <StyledText>\n            <Text color=\"textPrimary\">\n              {jobDescription}\n            </Text>\n          </StyledText>\n          <Title color=\"secondary\" size=\"sm\">\n            {money}\n          </Title>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" onClick={()=>{onDelete(id)}}>Excluir</Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n}\n\nexport default CardMyVacancy\n","import React, {useEffect, useState} from \"react\"\nimport {useStoreState, useStoreActions} from 'easy-peasy'\nimport {Link} from 'react-router-dom'\nimport Alert from '@material-ui/lab/Alert'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nimport Title from '../../comps/Title'\nimport Button from '../../comps/Button'\nimport FormText from '../../comps/FormText'\nimport CardMyVacancy from '../../comps/CardMyVacancy'\n\nconst MyJobs = () => {\n    const getAllJobs = useStoreActions(actions => actions.professional.getMyJobs)\n    const [jobList, setJobs] = useState([])\n    const [jobFullList, setFullJobs] = useState([])\n    const deleteJob = useStoreActions(actions => actions.professional.deleteMyJob)\n\n    const user = useStoreState(state => state.auth.auth.user)\n\n    // console.log(vacancies);\n\n    useEffect(() =>\n        {\n            (\n                async() =>\n                {\n                    try\n                    {\n                        if(!user.id)return\n\n                        const jobs = await getAllJobs(user.id)\n                        jobList.length === 0 && setJobs(jobs.data)\n\n                        setFullJobs(jobs.data)\n                    }\n                    catch(e)\n                    {\n                        console.log(e)\n                    }\n                }\n            )();\n        },\n        [user]\n    )\n\n    const handleDelete = async (id)=> {\n        console.log(id)\n\n        await deleteJob(id)\n\n        const jobs = await getAllJobs(user.id)\n        if(jobs && jobs.data)setJobs(jobs.data)\n    };\n\n    const handleText = event => {\n        const lowerText = event.target.value.toLowerCase()\n        const filteredJobs = jobList.filter(job => job._job.title.toLowerCase().startsWith(lowerText))\n\n        !lowerText || lowerText === \"\" ? setJobs(jobFullList) : setJobs(filteredJobs)\n    }\n\n    return (\n        <Container>\n            <Title style={{margin: '30px 0'}}>Minhas candidaturas</Title>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <a href=\"/dashboard/profissional\">\n                        <Button\n                            variant=\"contained\"\n                        >Voltar</Button>\n                    </a>\n                </Grid>\n                <Grid item xs={12}>\n                    <FormText\n                        label=\"Pesquisar por vaga\"\n                        onChange={e => handleText(e)}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container spacing={2}>\n                {\n                    jobList.length > 0 ?\n                        (jobList.map(job => (\n                            <CardMyVacancy\n                                key={job._id}\n                                id={job._id}\n                                enterpriseName={job._job.enterprise_name || \"Confidencial\"}\n                                jobTitle={job._job.title}\n                                location={job._job.city + ' - ' + job._job.stateName}\n                                period={job._job.total_period}\n                                jobDescription={job._job.requirements}\n                                money={'Cachê: R$ ' + job._job.cache}\n                                deleteFunc={handleDelete}\n                            />\n                        ))) :\n                        <Grid item xs={12}>\n                            <Alert variant=\"filled\" severity=\"warning\">Desculpe! Não encontramos vagas</Alert>\n                        </Grid>\n                }\n            </Grid>\n        </Container>\n    )\n}\n\nexport default MyJobs\n","import React, {useEffect, useState} from 'react'\nimport {useForm} from 'react-hook-form'\nimport Typography from '@material-ui/core/Typography'\nimport {Link} from 'react-router-dom'\nimport {useStoreActions, useStoreState} from 'easy-peasy'\n\nimport Email from '@material-ui/icons/Mail'\nimport Senha from '@material-ui/icons/Lock'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl'\nimport FilledInput from '@material-ui/core/FilledInput'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport {Error} from '../../components/Status'\nimport Button from '../../comps/Button'\nimport Title from '../../comps/Title'\n\nimport {\n    Background\n} from './style'\nimport {emailValidation} from '../../utils/service'\nimport history from '../../history'\n\nconst Forgot = () => {\n    const {register, handleSubmit, errors} = useForm()\n    const [modalStatus, setModalStatus] = useState(false)\n    const [modalMsg, setModalMsg] = useState('')\n    const authUser = useStoreActions(actions => actions.auth.forgotPwd)\n    const auth = useStoreState(state => state.auth.forgot)\n    const loginError = useStoreState(state => state.auth.error)\n    const onSubmit = (data) => authUser(data)\n\n    useEffect(() => {\n        if(auth)\n        {\n            setModalMsg(auth.resp.data)\n            setModalStatus(true)\n        }\n\n        if(loginError && loginError.message)\n        {\n            setModalMsg(loginError.message)\n            setModalStatus(true)\n        }\n    }, [auth, loginError])\n\n    return (\n        <Container\n            center=\"true\"\n            style={{\n                height: 'calc(100vh - 107px)',\n                display: 'flex',\n                alignItems: 'center'\n            }}\n        >\n            <Grid container alignItems=\"stretch\" justify=\"space-between\">\n                <form style={{width: '100%'}} onSubmit={handleSubmit(onSubmit)}>\n                    <Title>\n                        Informe seu email\n                    </Title>\n\n                    <FormControl fullWidth style={{margin: '10px 0'}} variant=\"filled\">\n                        <InputLabel htmlFor=\"filled-adornment-password\">E-mail</InputLabel>\n                        <FilledInput\n                            type=\"text\"\n                            name=\"email\"\n                            error={errors.email !== undefined}\n                            inputRef={register({\n                                required: 'Esse campo é obrigatório',\n                                pattern: {\n                                    value: emailValidation(),\n                                    message: 'Insira um endereço de e-mail válido'\n                                }\n                            })}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <Email color=\"primary\"/>\n                                </InputAdornment>\n                            }\n                        />\n                        {errors.email && (<FormHelperText error>{errors.email.message}</FormHelperText>)}\n                    </FormControl>\n                    <Button variant=\"contained\" type=\"submit\">\n                        Recuperar\n                    </Button>\n                </form>\n            </Grid>\n            <Snackbar open={modalStatus} autoHideDuration={3000} onClose={() => setModalStatus(false)}>\n                <Alert elevation={6} variant=\"filled\" onClose={() => setModalStatus(false)} severity=\"success\">\n                    {modalMsg}\n                </Alert>\n            </Snackbar>\n        </Container>\n    )\n}\n\nexport default Forgot\n","import React, {useEffect, useState} from 'react'\nimport {useForm} from 'react-hook-form'\nimport Typography from '@material-ui/core/Typography'\nimport {Link} from 'react-router-dom'\nimport {useStoreActions, useStoreState} from 'easy-peasy'\n\nimport Email from '@material-ui/icons/Mail'\nimport Senha from '@material-ui/icons/Lock'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl'\nimport FilledInput from '@material-ui/core/FilledInput'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport {Error} from '../../components/Status'\nimport Button from '../../comps/Button'\nimport Title from '../../comps/Title'\n\nimport {\n    Background\n} from './style'\nimport {emailValidation} from '../../utils/service'\nimport history from '../../history'\n\nconst Reset = ({match}) => {\n    const {register, handleSubmit, errors} = useForm()\n    const [modalStatus, setModalStatus] = useState(false)\n    const [modalMsg, setModalMsg] = useState('')\n    const authUser = useStoreActions(actions => actions.auth.resetPwd)\n    const auth = useStoreState(state => state.auth.forgot)\n    const loginError = useStoreState(state => state.auth.error)\n\n    const onSubmit = (data) => {\n        data.token = match.params.token;\n\n        authUser(data)\n    }\n\n    // const urlParts = window.location.href.split('/')\n    console.log(match.params.token)\n\n    useEffect(() => {\n        if(auth)\n        {\n            setModalMsg(auth.resp.data)\n            setModalStatus(true)\n        }\n\n        if(loginError && loginError.message)\n        {\n            setModalMsg(loginError.message)\n            setModalStatus(true)\n        }\n    }, [auth, loginError])\n\n    return (\n        <Container\n            center=\"true\"\n            style={{\n                height: 'calc(100vh - 107px)',\n                display: 'flex',\n                alignItems: 'center'\n            }}\n        >\n            <Grid container alignItems=\"stretch\" justify=\"space-between\">\n                <form style={{width: '100%'}} onSubmit={handleSubmit(onSubmit)}>\n                    <Title>\n                        Redefinir senha\n                    </Title>\n\n                    <FormControl fullWidth variant=\"filled\">\n                        <InputLabel htmlFor=\"filled-adornment-password\">Senha</InputLabel>\n                        <FilledInput\n                            type=\"password\"\n                            name=\"password\"\n                            error={errors.password !== undefined}\n                            inputRef={register({\n                                required: 'Esse campo é obrigatório',\n                                minLength: {\n                                    value: 6,\n                                    message: 'A senha deve ter no mínimo 6 caracteres'\n                                }\n                            })}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <Senha color=\"primary\"/>\n                                </InputAdornment>\n                            }\n                        />\n                        {errors.password && (<FormHelperText error>{errors.password.message}</FormHelperText>)}\n                    </FormControl>\n\n                    <FormControl fullWidth variant=\"filled\">\n                        <InputLabel htmlFor=\"filled-adornment-password\">Confirme a senha</InputLabel>\n                        <FilledInput\n                            type=\"password\"\n                            name=\"confirmedPassword\"\n                            error={errors.confirmedPassword !== undefined}\n                            inputRef={register({\n                                required: 'Esse campo é obrigatório',\n                                minLength: {\n                                    value: 6,\n                                    message: 'A senha deve ter no mínimo 6 caracteres'\n                                }\n                            })}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <Senha color=\"primary\"/>\n                                </InputAdornment>\n                            }\n                        />\n                        {errors.password && (<FormHelperText error>{errors.confirmedPassword.message}</FormHelperText>)}\n                    </FormControl>\n                    <Link to=\"/\">\n                        <Button>\n                            LOGIN\n                        </Button>\n                    </Link>\n                    <Button variant=\"contained\" type=\"submit\">\n                        Definir Senha\n                    </Button>\n                </form>\n            </Grid>\n            <Snackbar open={modalStatus} autoHideDuration={3000} onClose={() => setModalStatus(false)}>\n                <Alert elevation={6} variant=\"filled\" onClose={() => setModalStatus(false)} severity=\"success\">\n                    {modalMsg}\n                </Alert>\n            </Snackbar>\n        </Container>\n    )\n}\n\nexport default Reset\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router'\n\nimport { ThemeProvider } from '@material-ui/styles'\nimport { Router, Switch } from 'react-router-dom'\nimport { StoreProvider } from 'easy-peasy'\nimport theme from './utils/theme'\nimport history from './history'\n\nimport Header from './comps/Header'\nimport AppBody from './comps/AppBody'\nimport Users from './pages/Signup/User'\nimport Login from './pages/Login/Login'\nimport Dashboard from './pages/Dashboard/index'\nimport Admin from './pages/Dashboard/Admin/Admin'\nimport Enterprise from './pages/Signup/Enterprise'\nimport PrivateRoute from './components/PrivateRoute'\nimport VacancyList from './pages/Vacancy/VacancyList'\nimport AllVacancies from './pages/Vacancy/AllVacancies'\nimport AllEnterprises from './pages/Enterprises'\nimport AllProfessionals from './pages/Professionals'\nimport EditUser from './pages/Edit/User'\nimport EditProfessional from './pages/Edit/Professional'\nimport EditEnterprise from './pages/Edit/Enterprise'\nimport Professional from './pages/Signup/Professional'\nimport VacancyRegister from './pages/Vacancy/VacancyRegister'\nimport SearchEnterprise from './pages/Search/SearchEnterprise'\nimport SearchProfessionals from './pages/Search/SearchProfessionals'\nimport ResultSearchEnterprise from './pages/Search/ResultSearchEnterprise'\nimport ResultSearchProfessionals from './pages/Search/ResultSearchProfessionals'\nimport MyJobs from './pages/JobProfessional/MyJobs'\nimport Forgot from './pages/Login/Forgot'\nimport Reset from './pages/Login/Reset'\n\nconst App = ({ store }) => {\n  return (\n    <StoreProvider store={store}>\n      <Router history={history}>\n      <ThemeProvider theme={theme}>\n        <>\n          <Header\n            isOpened={true}\n          />\n          <AppBody>\n            <Route path=\"/\" exact component={Login} />\n            <Route path=\"/esqueci-senha\" exact component={Forgot} />\n            <Route path=\"/reset/:token\" component={Reset} />\n            <Route path=\"/cadastro\" exact component={Users} />\n            <Switch>\n              <PrivateRoute path='/dashboard/admin' exact component={Admin} />\n              <PrivateRoute\n                path='/listagem/vagas/:id'\n                component={VacancyList}\n              />\n              <PrivateRoute\n                path='/listagem/vagas'\n                component={AllVacancies}\n              />\n              <PrivateRoute path='/cadastro/vaga' component={VacancyRegister} />\n              <PrivateRoute path='/cadastro/empresa' component={Enterprise} />\n              <PrivateRoute\n                path='/cadastro/profissional'\n                component={Professional}\n              />\n              <PrivateRoute\n                path='/dashboard/admin/empresas'\n                component={AllEnterprises}\n              />\n              <PrivateRoute\n                path='/dashboard/admin/profissionais'\n                component={AllProfessionals}\n              />\n              <PrivateRoute\n                path='/editar/usuario/:user_id'\n                component={EditUser}\n              />\n              <PrivateRoute\n                path='/editar/profissional/:id'\n                component={EditProfessional}\n              />\n              <PrivateRoute\n                path='/editar/empresa/:id'\n                component={EditEnterprise}\n              />\n              <PrivateRoute\n                path='/dashboard/profissional'\n                component={Dashboard}\n              />\n              <PrivateRoute\n                path='/dashboard/empresa'\n                component={Dashboard}\n              />\n              <Route\n                path='/busca/profissionais'\n                component={SearchProfessionals}\n              />\n              <Route\n                path='/resultados/profissionais'\n                component={ResultSearchProfessionals}\n              />\n              <Route path='/busca/empresas' component={SearchEnterprise} />\n              <Route\n                path='/resultados/empresas'\n                component={ResultSearchEnterprise}\n              />\n              <Route\n                  path='/listagem/candidaturas'\n                  component={MyJobs}\n              />\n              <Redirect from='*' to='/' />\n            </Switch>\n          </AppBody>\n        </>\n        </ThemeProvider>\n      </Router>\n    </StoreProvider>\n  )\n}\n\nApp.propTypes = {\n  store: PropTypes.object.isRequired,\n}\n\nexport default App\n","import authModel from './auth'\nimport registerModel from './register'\nimport userModel from './user'\nimport vacancyModel from './vacancy'\nimport enterpriseModel from './enterprise'\nimport professionalModel from './professional'\nimport uiModel from './ui'\n\nexport default {\n  authModel,\n  registerModel,\n  userModel,\n  vacancyModel,\n  enterpriseModel,\n  professionalModel,\n  uiModel\n}","import {thunk, action} from 'easy-peasy'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\n\nimport setAuthToken from '../utils/setAuthToken'\nimport history from '../history'\nimport {isEmpty, getUserType} from '../utils/service'\n\nconst authModel = {\n    authUser: thunk(async(actions, payload) => {\n        try\n        {\n            const res = await axios.post('/api/user/login', payload)\n\n            // Set token to localStorage\n            const {token} = res.data\n            localStorage.setItem('jwtToken', token)\n\n            // Set token to auth header\n            setAuthToken(token)\n\n            // Decode token to get user data\n            const decoded = jwtDecode(token)\n\n            // Set current user\n            actions.setAuth({\n                isAuthenticated: !isEmpty(decoded),\n                user: decoded\n            })\n\n            localStorage.removeItem('user_type')\n\n            try\n            {\n                const check = await axios.get('/api/user/has-additional-register')\n                const type = getUserType(decoded.type)\n\n                if(check.data.hasAdditionalRegister || type === 'admin')\n                {\n                    return history.push(`/dashboard/${type}`)\n                }\n\n                return history.push(`/cadastro/${type}`)\n            }\n            catch(err)\n            {\n                const error = err.response.data\n                return actions.setErrors({...error})\n            }\n        }\n        catch(err)\n        {\n            const error = err.response.data\n            return actions.setErrors({...error})\n        }\n    }),\n    forgotPwd: thunk(async(actions, payload) => {\n        console.log(payload)\n\n        try\n        {\n            const res = await axios.post('/api/user/forgot-password', payload)\n            return actions.setForgotResp({resp: res})\n        }\n        catch(err)\n        {\n            const error = err.response.data\n            return actions.setErrors({...error})\n        }\n    }),\n    resetPwd: thunk(async(actions, payload) => {\n        console.log(payload)\n\n        try\n        {\n            const res = await axios.post('/api/user/reset/' + payload.token, payload)\n            return actions.setForgotResp({resp: res})\n        }\n        catch(err)\n        {\n            const error = err.response.data\n            return actions.setErrors({...error})\n        }\n    }),\n    logoutUser: thunk(async(actions, payload) => {\n        // Remove token from localStorage\n        localStorage.removeItem('jwtToken')\n\n        // Remove auth header for future requests\n        setAuthToken(false)\n\n        // Set the current user to {} wich will set isAuthenticated to false\n        actions.setAuth({\n            isAuthenticated: false,\n            user: {}\n        })\n\n        history ? history.push('/') : window.location.href = '/'\n    }),\n    auth: {\n        isAuthenticated: false,\n        user: {}\n    },\n    setAuth: action((state, payload) => ({\n        auth: {...payload}\n    })),\n    setForgotResp: action((state, payload) => ({\n        forgot: {...payload}\n    })),\n    error: {},\n    setErrors: action((state, payload) => ({\n        error: payload\n    }))\n}\n\nexport default authModel\n","import { thunk, action } from 'easy-peasy'\nimport axios from 'axios'\nimport history from '../history'\nimport { getUserType } from '../utils/service'\n\nconst registerModel = {\n  registerProfessional: thunk(async (actions, payload) => {\n    try {\n      await axios.post('/api/professional/register', payload)\n      return history.push(`/dashboard/${getUserType(payload.type)}`)\n    }\n    catch (err) {\n      console.log(err)\n      const error = {\n        professional: err.response.data && err.response.data.register\n      }\n      return actions.setErrors(error)\n    }\n  }),\n  \n  registerCompany: thunk(async (actions, payload) => {\n    try {\n      await axios.post('/api/enterprise/register', payload)\n      return history.push(`/dashboard/${getUserType(payload.type)}`)\n    }\n    catch (err) {\n      console.log(err)\n      const error = {\n        enterprise: err.response.data && err.response.data.register\n      }\n      return actions.setErrors(error)\n    }\n  }),\n  registerUser: thunk(async (actions, payload) => {\n    try {\n      await axios.post('/api/user/register', payload)\n      return history.push('/')\n    }\n    catch (err) {\n      console.log(err)\n      const error = {\n        user: err.response.data && err.response.data.register\n      }\n      return actions.setErrors(error)\n    }\n  }),\n  error: {},\n  setErrors: action((state, payload) => ({\n    error: payload\n  }))\n}\n\n\nexport default registerModel","import { thunk, action } from 'easy-peasy'\nimport history from '../history'\nimport axios from 'axios'\n\nconst userModel = {\n  user: {},\n  error: {},\n  getUser: thunk(async (actions, payload) => {\n    try {\n      const user = await axios.get('/api/user/current')\n      const userTypeData = await axios.get(`/api/${payload}`)\n      // Set current user profile\n      actions.setUser({\n        ...user.data,\n        ...userTypeData.data,\n        enterprise_id: userTypeData.data._id\n      })\n    }\n    catch (e) {\n      throw e\n    }\n  }),\n  getUserById: thunk(async (actions, payload) => {\n    try {\n      const user = await axios.get(`/api/user/${payload}`)\n      const userTypeData = await axios.get(`/api/professional`)\n      // Set current user profile\n      actions.setUser({\n        id: user.data._id,\n        name: user.data.name,\n        email: user.data.email,\n        phone: user.data.phone,\n        gender: user.data.gender,\n        type: user.data.type,\n        self_declaration: user.data.self_declaration,\n        ...userTypeData.data,\n        enterprise_id: userTypeData.data._id\n      })\n    }\n    catch (e) {\n      actions.setError(e)\n    }\n  }),\n  editUser: thunk(async (actions, payload) => {\n    try {\n      await axios.put(`/api/user/edit/${payload.type}/${payload.id}`, payload)\n      const type = payload.type === 'enterprise' ? 'empresa' : 'profissional'\n      return history.push(`/dashboard/${type}`)\n    }\n    catch (e) {\n      actions.setError(e)\n    }\n  }),\n  getAllUsers: thunk(async (actions) => {\n    try {\n      return await axios.get('/api/user/all')\n    }\n    catch (err) {\n      console.log(err)\n      const error = err.response.data && err.response.data.users\n      actions.setError(error)\n    }\n  }),\n  getProfessionalAll: thunk(async (actions, payload) => {\n    try {\n      console.log('getProfessionalAll', payload)\n      return await axios.post(\n          '/api/professional/all',\n          payload\n      )\n    }\n    catch (err) {\n      console.log(err)\n      return err.response\n    }\n  }),\n  setUser: action((state, payload) =>\n      ({\n        user: { ...payload }\n      })\n  ),\n  setError: action((state, payload) => ({\n    error: payload\n  }))\n}\n\nexport default userModel\n","import { thunk, action } from 'easy-peasy'\nimport axios from 'axios'\n\nconst vacancyModel = {\n  getAllVacancies: thunk(async (actions, payload) => {\n    // all specific enterpise vacancies\n    try {\n      const res = payload && await axios.get(`/api/job/all/${payload}`)\n      actions.setVacancies(res && res.data)\n    }\n    catch (err) {\n      console.log(err)\n    }\n  }),\n  getAllJobs: thunk(async (actions, payload) => {\n    try {\n      console.log(payload)\n      return await axios.get('/api/job/', {params:payload})\n    }\n    catch (err) {\n      console.log(err)\n      const error = err.response.data\n      actions.setError({...error})\n    }\n  }),\n  vancancies: [],\n  setVacancies: action((state, payload) => ({\n    vacancies: payload\n  })),\n  error: {},\n  setError: action((state, payload) => ({\n    error: payload\n  }))\n}\n\nexport default vacancyModel\n","import { thunk, action } from 'easy-peasy'\nimport history from '../history'\nimport axios from 'axios'\n\nconst enterpriseModel = {\n  registerJob: thunk(async (actions, payload) => {\n    try {\n      await axios.post('/api/job', payload)\n      return history.push(`/dashboard/empresa`)\n    }\n    catch (err) {\n      console.log(err)\n      const error = err.response.data && err.response.data.job\n      actions.setError(error)\n    }\n  }),\n  editEnterprise: thunk(async (actions, payload) => {\n    try {\n      await axios.put(`/api/enterprise/edit/${payload.id}`, payload)\n      return history.push(`/dashboard/empresa`)\n    }\n    catch (e) {\n      actions.setError(e)\n    }\n  }),\n  getAllEnterpriseUsers: thunk(async (actions, payload) => {\n    try {\n      const enterprises = await axios.get('/api/enterprise/all')\n      const users = await axios.get('/api/user/all')\n      \n      const fuse = (users.data)\n        .filter(userFilter => userFilter.type === 'enterprise')\n        .map(user => {\n          const enterprise = (enterprises.data).filter(i => i.user_id === user._id)\n          if (enterprise.length > 0) {\n            return {\n              ...enterprise[0],\n              ...user,\n              enterprise_id: enterprise[0]._id,\n              enterprise_name: enterprise[0].name\n            }\n          }\n          return false\n        })\n      actions.setEnterprises(fuse)\n    }\n    catch (err) {\n      console.log(err)\n      const error = err.response.data && err.response.data.enterprises\n      actions.setError(error)\n    }\n  }),\n  getEnterpriseById: thunk(async (actions, payload) => {\n    try {\n      const enterprise = await axios.get(`/api/enterprise/${payload}`)\n      \n      actions.setEnterprises({\n        id: enterprise.data._id,\n        enterprise_name: enterprise.data.enterprise_name,\n        foundation_date: enterprise.data.foundation_date,\n        presentation: enterprise.data.presentation,\n        links: enterprise.data.links,\n        diversity_functions: enterprise.data.diversity_functions,\n        identity_content: enterprise.data.identity_content,\n        cnpj_type: enterprise.data.cnpj_type,\n        identity_segments: enterprise.data.identity_segments,\n        business_segments: enterprise.data.business_segments,\n        business_fields: enterprise.data.business_fields,\n        other_states: enterprise.data.other_states,\n        city: enterprise.data.city,\n        state: enterprise.data.state,\n        apan_associate: enterprise.data.apan_associate\n      })\n\n      console.log(\"foi\")\n    }\n    catch (e) {\n      actions.setError(e)\n      console.log('deu ruim')\n    }\n  }),\n  getAll: thunk(async (actions, payload) => {\n    try {\n      return await axios.get('/api/enterprise/all')\n    }\n    catch (err) {\n      console.log(err)\n      return err.response\n    } \n  }),\n  enterprises: [],\n  setEnterprises: action((state, payload) => ({\n    enterprises: payload\n  })),\n  error: {},\n  setError: action((state, payload) => ({\n    error: payload\n  }))\n}\n\nexport default enterpriseModel\n","import { thunk, action } from 'easy-peasy'\nimport history from '../history'\nimport axios from 'axios'\n\nconst professionalModel = {\n  applyJob: thunk(async (actions, payload) => {\n    try {\n      await axios.post(`/api/job/apply`, payload)\n      return history.push(`/listagem/candidaturas`)\n    }\n    catch (err) {\n      console.log(err)\n      const error = err.response.data && err.response.data.job\n      actions.setError(error)\n    }\n  }),\n  deleteMyJob: thunk(async (actions, payload) => {\n    try {\n      console.log(payload)\n      await axios.delete(`/api/job/myjobs/${payload}`)\n      return history.replace(`/listagem/candidaturas`)\n    }\n    catch (err) {\n      console.log(err)\n      const error = err.response.data && err.response.data.job\n      actions.setError(error)\n    }\n  }),\n  getMyJobs: thunk(async (actions, payload) => {\n    try {\n      return  await axios.get(`/api/job/myjobs/${payload}`)\n    }\n    catch (err) {\n      console.log(err)\n      const error = err.response.data\n      actions.setError({...error})\n    }\n  }),\n  getAllProfessionals: thunk(async (actions, payload) => {\n    try {\n      const professionals = await axios.get('/api/professional/all')\n      const users = await axios.get('/api/user/all')\n\n      const fuse = (users.data)\n        .filter(userFilter => userFilter.type === 'professional')\n        .map(user => {\n          const professional = (professionals.data).filter(i => i.user_id === user._id)\n          console.log('prof =>', professional, user)\n          if (professional.length > 0) {\n            return {\n              ...professional[0],\n              ...user,\n            }\n          }\n          return false\n        })\n      actions.setProfessionals(fuse.filter(op => op.name))\n    }\n    catch (err) {\n      console.log(err)\n      const error = err.response.data && err.response.data.professionals\n      actions.setError(error)\n    }\n  }),\n  getProfessionalById: thunk(async (actions, payload) => {\n    try {\n      const professional = await axios.get(`/api/professional/${payload}`)\n      console.log('getProfessionalById', professional)\n      // Set current user profile\n      actions.setProfessionalForEdit({\n        id: professional.data._id,\n        birthday: professional.data.birthday,\n        pcd: professional.data.pcd,\n        home_state: professional.data.home_state,\n        state: professional.data.state,\n        city: professional.data.city,\n        address: professional.data.address,\n        education: professional.data.education,\n        formation_institution: professional.data.formation_institution,\n        cnpj: professional.data.cnpj,\n        cnpj_type: professional.data.cnpj_type,\n        identity_content: professional.data.identity_content,\n        identity_segments: professional.data.identity_segments,\n        expertise_areas: professional.data.expertise_areas,\n        apan_associate: professional.data.apan_associate,\n        links: professional.data.links,\n        bio: professional.data.bio,\n      })\n\n    }\n    catch (e) {\n      actions.setError(e)\n      console.log('deu ruim')\n    }\n  }),\n  editProfessional: thunk(async (actions, payload) => {\n    try {\n      await axios.put(`/api/professional/edit/${payload.id}`, payload)\n      return history.push(`/dashboard/profissional`)\n    }\n    catch (e) {\n      actions.setError(e)\n    }\n  }),\n  professionals: [],\n  setProfessionals: action((state, payload) => {\n    return ({\n      professionals: payload\n    })\n  }),\n  setProfessionalForEdit: action((state, payload) => {\n    console.log('setPro =>', payload)\n    return ({\n      professional: payload\n    })\n  }),\n  error: {},\n  setError: action((state, payload) => ({\n    error: payload\n  }))\n}\n\nexport default professionalModel\n","import { thunk, action } from 'easy-peasy'\nimport axios from 'axios'\n\nconst uiModel = {\n  menuOpened: false,\n  \n  toggleMenu: action((state, payload) => ({\n      menuOpened: payload\n  }))\n}\n\nexport default uiModel","import { createStore } from 'easy-peasy';\nimport GlobalModels from './models'\n\nconst {\n  example,\n  authModel,\n  uiModel,\n  registerModel,\n  userModel,\n  vacancyModel,\n  enterpriseModel,\n  professionalModel,\n} = GlobalModels\n\nconst storeModel = {\n  products: example,\n  auth: authModel,\n  register: registerModel,\n  user: userModel,\n  vacancy: vacancyModel,\n  enterprise: enterpriseModel,\n  professional: professionalModel,\n  ui: uiModel\n};\n\nconst store = createStore(storeModel);\n\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport store from './store'\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss'\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.3b4e7be4.svg\";"],"sourceRoot":""}